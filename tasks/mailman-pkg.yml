---
#                  _    __ _       __      _       __     ___            _        
#  _ __   ___  ___| |_ / _(_)_  __/ /_ __ | | ____ \ \   / / |_ __ _ ___| | _____ 
# | '_ \ / _ \/ __| __| |_| \ \/ / || '_ \| |/ / _` | | / /| __/ _` / __| |/ / __|
# | |_) | (_) \__ \ |_|  _| |>  <| || |_) |   < (_| | |/ / | || (_| \__ \   <\__ \
# | .__/ \___/|___/\__|_| |_/_/\_\ || .__/|_|\_\__, | /_/   \__\__,_|___/_|\_\___/
# |_|                             \_\_|        |___/_/                            
# mailman-pkg
- block:
    - name: mailman-pkg | Debian | Mailman should be installed
      environment:
        DEBIAN_FRONTEND: "noninteractive"
      apt:
        state: "present"
        name:
          - "mailman"
  when: ansible_os_family == "Debian"

- name: mailman-pkg | mm_cfg.py should be deployed
  notify: Restart mailman
  template:
    src:    "etc/mailman/mm_cfg.py.j2"
    dest:   "{{ mailman.configroot }}/mm_cfg.py"
    owner:  "root"
    group:  "root"
    mode:   "0644"

- name: mailman-pkg | apache.conf should be deployed
  template:
    src:    "etc/mailman/apache.conf.j2"
    dest:   "{{ mailman.configroot }}/apache.conf"
    owner:  "root"
    group:  "root"
    mode:   "0644"

- name: mailman-pkg | aliases should be deployed
  register: deploy_mailman_aliases
  template:
    src:    "var/lib/mailman/data/aliases.j2"
    dest:   "{{ mailman.serverroot }}/data/aliases"
    owner:  "{{ mailman.username }}"
    group:  "{{ mailman.group }}"
    mode:   "0644"

- name: mailman-pkg | aliases should be postaliased
  when: deploy_mailman_aliases.changed
  shell: postalias {{ mailman.serverroot }}/data/aliases

- name: mailman-pkg | Deploy /etc/cron.d/mailman
  template:
    src:    "etc/cron.d/mailman.j2"
    dest:   "/etc/cron.d/mailman"
    owner:  "root"
    group:  "root"
    mode:   "0644"

- name: mailman-pkg | Deploy /etc/logrotate.d/mailman
  template:
    src:    "etc/logrotate.d/mailman.j2"
    dest:   "/etc/logrotate.d/mailman"
    owner:  "root"
    group:  "root"
    mode:   "0644"

- name: mailman-pkg | The first ML/SITE LIST should be created
  shell: >
    echo | {{ mailman.serverroot }}/bin/newlist {{ mailman.thefirstml }} {{ mailman.listmaster }} {{ mailman.mlpassword }}
  args:
    creates: "{{ mailman.serverroot }}/lists/{{ mailman.thefirstml }}"

- name: mailman-pkg | Deploy files for the first ML
  template:
    src:   "etc/mailman/{{ mailman.thefirstml }}.{{ item }}.j2"
    dest:  "{{ mailman.configroot }}/{{ mailman.thefirstml }}.{{ item }}"
    owner: "root"
    owner: "root"
    mode:  "0644"
  loop:
    - "cf"
    - "aliases"
    - "subscribers"

- name: mailman-pkg | Each list should be created
  shell: >
    echo | {{ mailman.serverroot }}/bin/newlist {{ item.name }} {{ item.owner }} {{ item.password }}
  args:
    creates: "{{ mailman.serverroot }}/lists/{{ item.name }}"
  loop: "{{ mailman.lists }}"

- name: mailman-pkg | Deploy Makefile into /etc/mailman
  template:
    src:   "etc/mailman/Makefile.j2"
    dest:  "{{ mailman.configroot }}/Makefile"
    owner: "root"
    group: "root"
    mode:  "0644"

- name: mailman-pkg | Deploy configuration files for each ML
  template:
    src:   "etc/mailman/{{ item.name }}.cf.j2"
    dest:  "{{ mailman.configroot }}/{{ item.name }}.cf"
    owner: "root"
    group: "root"
    mode:  "0644"
  loop: "{{ mailman.lists }}"

- name: mailman-pkg | Deploy aliases templates for each ML
  template:
    src:   "etc/mailman/aliases-template.j2"
    dest:  "{{ mailman.configroot }}/{{ item.name }}.aliases"
    owner: "root"
    group: "root"
    mode:  "0644"
  loop: "{{ mailman.lists }}"


- name: mailman-pkg | Deploy systemd unit file
  notify: Reload mailman
  template:
    src:    "usr/lib/systemd/system/mailman.service.j2"
    dest:   "/usr/lib/systemd/system/mailman.service"
    owner:  "root"
    group:  "root"
    mode:   "0644"

- name: mailman-pkg | Mailman should be started
  when: mailman.started == true
  service:
    name:  "{{ mailman.service }}"
    state: "started"

- name: mailman-pkg | Mailman should be enabled
  when: mailman.enabled == true
  service:
    name:    "{{ mailman.service }}"
    enabled: "yes"

