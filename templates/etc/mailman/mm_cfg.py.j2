# -*- python -*-

# Copyright (C) 1998,1999,2000 by the Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301 USA


"""This is the module which takes your site-specific settings.

From a raw distribution it should be copied to mm_cfg.py.  If you
already have an mm_cfg.py, be careful to add in only the new settings
you want.  The complete set of distributed defaults, with annotation,
are in ./Defaults.  In mm_cfg, override only those you want to
change, after the

  from Defaults import *

line (see below).

Note that these are just default settings - many can be overridden via the
admin and user interfaces on a per-list or per-user basis.

Note also that some of the settings are resolved against the active list
setting by using the value as a format string against the
list-instance-object's dictionary - see the distributed value of
DEFAULT_MSG_FOOTER for an example."""


# -------------------------------------------------------------------------------------------------
# Here's where we get the distributed defaults. 
from Defaults import *

# -------------------------------------------------------------------------------------------------
# Put YOUR site-specific configuration below, in mm_cfg.py. See Defaults.py for explanations of the
# values.

# The name of the list Mailman uses to send password reminders and similar. Don't change if you
# want mailman-owner to be a valid local part.
MAILMAN_SITE_LIST = '{{ mailman.thefirstml }}'

# If you change these, you have to configure your http server accordingly (Alias and ScriptAlias
# directives in most httpds)
DEFAULT_URL_PATTERN = 'http://%s/cgi-bin/mailman/'
DEFAULT_EMAIL_HOST  = '{{ postfix.mailconfig.myhostname }}'
DEFAULT_URL_HOST    = '{{ mailman.defaulturl }}'
IMAGE_LOGOS         = '/images/mailman/'
add_virtualhost(DEFAULT_URL_HOST, DEFAULT_EMAIL_HOST)

# The default language for this server.
DEFAULT_SERVER_LANGUAGE = 'en'

# Are archives public or private by default? 0=public, 1=private
DEFAULT_ARCHIVE_PRIVATE = 1

# Should a list, by default be advertised? What is the default maximum number of explicit recipi-
# ents allowed?  What is the default maximum message size(KB) allowed?
DEFAULT_LIST_ADVERTISED = 0
DEFAULT_MAX_NUM_RECIPIENTS = 16
DEFAULT_MAX_MESSAGE_SIZE = 512

# These format strings will be expanded w.r.t. the dictionary for the mailing list instance.
DEFAULT_SUBJECT_PREFIX = "[%(real_name)s %%d]" # for numbering
DEFAULT_MSG_FOOTER = ""

# Send welcome messages to new users? | Send goodbye messages to unsubscribed members?
DEFAULT_SEND_WELCOME_MSG = No
DEFAULT_SEND_GOODBYE_MSG = No

# Mailman can be configured to "munge" Reply-To: headers for any passing messages. One the one
# hand, there are a lot of good reasons not to munge Reply-To: but on the other, people really seem
# to want this feature.  See the help for reply_goes_to_list in the web UI for links discussing the
# issue.
#   0 - Reply-To: not munged
#   1 - Reply-To: set back to the list
#   2 - Reply-To: set to an explicit value (reply_to_address)
DEFAULT_REPLY_GOES_TO_LIST = 1

# See "Bitfield for user options" below; make this a sum of those options, to make all new members
# of lists start with those options flagged. We assume by default that people don't want to receive
# two copies of posts. Note however that the member moderation flag's initial value is controlled
# by the list's config variable default_member_moderation.
DEFAULT_NEW_MEMBER_OPTIONS = 256

# What should happen to non-member posts which are do not match explicit non-member actions?
#   0 = Accept
#   1 = Hold
#   2 = Reject
#   3 = Discard
DEFAULT_GENERIC_NONMEMBER_ACTION = 2

# When allowing only members to post to a mailing list, how is the sender of the message determin-
# ed? If this variable is set to Yes, then first the message's envelope sender is used, with a
# fallback to the sender if there is no envelope sender. Set this variable to No to always use the
# sender.
#
# The envelope sender is set by the SMTP delivery and is thus less easily spoofed than the sender,
# which is typically just taken from the From: header and thus easily spoofed by the end-user. How-
# ever, sometimes the envelope sender isn't set correctly and this will manifest itself by postings
# being held for approval even if they appear to come from a list member.  If you are having this
# problem, set this variable to No, but understand that some spoofed messages may get through.
USE_ENVELOPE_SENDER = No

# Unset send_reminders on newly created lists
DEFAULT_SEND_REMINDERS = 0

# Where to put subject prefix for 'Re:' messages:
#   - old style: Re: [prefix] test
#   - new style: [prefix 123] Re: test ... (number is optional)
# Old style is default for backward compatibility. New style is forced if a list owner set %d (num-
# bering) in prefix. If the site owner had applied new style patch (from SF patch area) before, he/
# she may want to set this No in mm_cfg.py.
OLD_STYLE_PREFIXING = No

# Set this variable to Yes to allow list owners to delete their own mailing lists. You may not want
# to give them this power, in which case, setting this variable to No instead requires list removal
# to be done by the site administrator, via the command line script bin/rmlist.
OWNERS_CAN_DELETE_THEIR_OWN_LISTS = 0

# If the following is set to a non-empty string, this string in combination with the time, list
# name and the IP address of the requestor is used to create a hidden hash as part of the subscribe
# form on the listinfo page. This hash is checked upon form submission and the subscribe fails if
# it doesn't match. I.e. the form posted must be first retrieved from the listinfo CGI by the same
# IP that posts it. The subscribe also fails if # the time the form was retrieved is more than the
# above FORM_LIFETIME or less than the below SUBSCRIBE_FORM_MIN_TIME before submission.
#
# Important:
# If you have any static subscribe forms on your web site, setting this option will break them.
# With this option set, subscribe forms must be dynamically generated to include the hidden data.
# See the code block beginning with "if mm_cfg.SUBSCRIBE_FORM_SECRET:" in Mailman/Cgi/listinfo.py
# for the details of the hidden data.
#SUBSCRIBE_FORM_SECRET = ''

# Uncomment if you use Postfix virtual domains (but not postfix-to-mailman.py), but be sure to see
# /usr/share/doc/mailman/README.Debian first.
MTA = 'Postfix'

# Uncomment if you want to filter mail with SpamAssassin. For more information please visit this
# website: http://www.jamesh.id.au/articles/mailman-spamassassin/
#GLOBAL_PIPELINE.insert(1, 'SpamAssassin')

# Note - if you're looking for something that is imported from mm_cfg, but you didn't find it
# above, it's probably in /usr/lib/mailman/Mailman/Defaults.py.
#
