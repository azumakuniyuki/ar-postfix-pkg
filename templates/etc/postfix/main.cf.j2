# /etc/postfix/main.cf
# =============================================================================
# Global Postfix configuration file: /etc/postfix/main.cf. This file lists only
# a subset of all configuration parameters.  For the syntax, and for a complete
# parameter list, see the postconf (5) manual page (command: "man 5 postconf").


# BOUNCE
# -----------------------------------------------------------------------------
# soft_bounce (default: no)
#   The "soft_bounce" parameter provides a limited safety net for testing. When
#   "soft_bounce" parameter is enabled, mail will remain queued that would oth-
#   erwise bounce.  This parameter disables locally-generated bounces, and pre-
#   vents the SMTP server from rejecting mail permanently  (by changing 5xx re-
#   plies into 4xx replies).  However, "soft_bounce" is no cure for address re-
#   writing mistakes or mail routing mistakes.
soft_bounce = no

# bounce_queue_lifetime (default: 5d)
#   Consider a bounce message as undeliverable, when delivery fails with a tem-
#   porary error, and the time in the queue has reached the value of parameter:
#   bounce_queue_lifetime limit. By default, this limit is the same as for reg-
#   ular mail. Specify "0" when mail delivery  should be tried only once.
bounce_queue_lifetime = 1d

# bounce_size_limit (default: 50000)
#   The maximal amount  of original message text that is sent in a non-delivery
#   notification. Specify a byte count.
#
#   A message is returned as either "message/rfc822" (the complete original) or
#   as text/rfc822-headers (the headers only).  With Postfix 2.4 and earlier, a
#   message is always returned as "message/rfc822" and is truncated when it ex-
#   ceeds the size limit.
#
#   Notes: If you increase this limit, then you should increase the
#          mime_nesting_limit value proportionally.
#
#   Be careful when making changes. Excessively large values will result in the
#   loss of  non-delivery notifications,  when a bounce message size  exceeds a
#   local or remote MTA's message size limit.
bounce_size_limit = 50000

# bounce_template_file (default: empty)
#   Pathname of a configuration file with bounce message templates. These over-
#   ride the built-in templates  of delivery status notification (DSN) messages
#   for undeliverable mail,  for delayed mail, successful delivery, or delivery
#   verification. The bounce(5) manual page describes how to edit and test tem-
#   plate files.
#
#   Template message body text may contain $name references to Postfix configu-
#   ration parameters. The result of "$name" expansion  can  be previewed  with
#   "postconf -b file_name" before the file is placed into the Postfix configu-
#   ration directory. This feature is available in Postfix 2.3 and later.
bounce_template_file =

# notify_classes (default: resource, software)
#   The list  of error classes that are reported to the postmaster. The default
#   is to report only the most serious problems. The paranoid  may wish to turn
#   on the policy (UCE and mail relaying) and protocol error (broken mail soft-
#   ware) reports.
#
#   NOTE: postmaster notifications may contain confidential information such as
#         SASL passwords or message content.
#
#   It is  the system administrator's responsibility  to treat such information
#   with care. The error classes are:
#
#   - bounce (also implies 2bounce)
#       Send the  postmaster copies of the headers of bounced mail,
#       and send transcripts of SMTP sessions when Postfix rejects mail.
#       The notification is sent to the address specified with the
#       bounce_notice_recipient configuration parameter (default: postmaster).
#   - 2bounce
#       Send undeliverable bounced mail to the postmaster. The notification
#       is sent to the address specified with the "2bounce_notice_recipient"
#       configuration parameter (default: postmaster).
#   - data
#       Send the postmaster a transcript of the SMTP session with an error
#       because a critical data file was unavailable. The notification is sent
#       to the address specified with the error_notice_recipient configuration
#       parameter (default: postmaster).
#       This feature is available in Postfix 2.9 and later.
#   - delay
#       Send the postmaster copies of the headers of delayed mail
#       (see delay_warning_time).  The notification is sent to the address
#       specified with the delay_notice_recipient configuration parameter
#       (default: postmaster).
#   - policy
#       Send the postmaster a transcript of the SMTP session when a client
#       request was rejected because of (UCE) policy. The notification is
#       sent to the address specified  with the  "error_notice_recipient"
#       configuration parameter (default: postmaster).
#   - protocol
#       Send the postmaster a transcript of the SMTP session in case of client
#       or server protocol errors. The notification is sent to the address
#       specified with the "error_notice_recipient" configuration parameter
#       (default: postmaster).
#   - resource
#       Inform the postmaster of mail not delivered  due to resource problems.
#       The notification is sent to the address specified with the
#       error_notice_recipient configuration parameter (default: postmaster).
#   - software
#       Inform the postmaster of mail not delivered due to software problems.
#       The notification is sent to the address specified with the
#       error_notice_recipient configuration parameter (default: postmaster).
notify_classes = resource, software

# backwards_bounce_logfile_compatibility (default: yes)
#   Produce additional bounce(8)  logfile records  that can be read  by Postfix
#   versions before 2.0.  The current and more extensible "name = value" format
#   is needed in order to implement more sophisticated functionality. This fea-
#   ture is available in Postfix 2.1 and later.
backwards_bounce_logfile_compatibility = yes

# delay_warning_time (default: 0h)
#   The delay_warning_time configuration parameter is the time after  which the
#   sender receives a copy of the message headers of mail that is still queued.
#   The "confirm_delay_cleared" parameter controls sender notification when the
#   delay clears up.
#   See also: delay_notice_recipient, notify_classes, confirm_delay_cleared.
delay_warning_time = 0h


# MAIL QUEUES
# -----------------------------------------------------------------------------
# dont_remove (default: 0)
#   Don't remove queue files and save them to the "saved" mail queue. This is a
#   debugging aid. To inspect the envelope information and content of a Postfix
#   queue file, use the postcat(1) command.
dont_remove = 0

# enable_long_queue_ids (default: no)
#   Enable "long and non-repeating" queue IDs(queue file names). The benefit of
#   non-repeating names is simpler logfile analysis  and easier queue migration
#   (there is no need to run "postsuper" to change queue file names that do not
#   match their message file inode number).
#
#   Note: see below for how to convert long queue file names to Postfix <= 2.8.
enable_long_queue_ids = yes

# maximal_queue_lifetime (default: 5d)
#   Consider a message as undeliverable,  when delivery fails  with a temporary
#   error, and the time in the queue  has reached the  "maximal_queue_lifetime"
#   limit. Specify 0 when mail delivery should be tried only once.
maximal_queue_lifetime = 1d

# minimal_backoff_time (default: 300s)
#   The minimal time between attempts to deliver  a deferred message;  prior to
#   Postfix version 2.4 the default value was 1000s. This parameter also limits
#   the time an  unreachable destination is kept  in the short-term, in-memory,
#   destination status cache.  This parameter should be set  greater than or e-
#   qual to $queue_run_delay. See also $maximal_backoff_time.
minimal_backoff_time = 300s

# maximal_backoff_time (default: 4000s)
#   The "maximal_backoff_time" configuration  parameter is the maximal time be-
#   tween attempts to deliver a deferred message.  This parameter should be set
#   to a value greater  than or equals to the value of "$minimal_backoff_time".
#   See also $queue_run_delay.
maximal_backoff_time = 4000s

# qmgr_message_active_limit (default: 20000)
#   The maximal number of messages in the active queue.
qmgr_message_active_limit = 20000

# queue_minfree (default: 0)
#   The minimal amount of free space in bytes  in the queue file system that is
#   needed to receive mail.  This is currently used  by the Postfix SMTP server
#   to decide if it will accept any mail at all.  By default,  the Postfix SMTP
#   server  rejects "MAIL FROM" commands when the amount of free space  is less
#   than 1.5 * $message_size_limit (Postfix version 2.1 and later).  To specify
#   a higher minimum free space limit, specify a queue_minfree value that is at
#   least 1.5 * $message_size_limit.  With Postfix versions 2.0  and earlier, a
#   "queue_minfree" value of zero means  there is no minimum required amount of
#   free space.
queue_minfree = 0

# queue_run_delay (default: 300s)
#   The "queue_run_delay" parameter is the time between deferred queue scans by
#   the queue manager;  prior to Postfix 2.4 the default value was 1000s.  This
#   parameter should be set less than or equal to $minimal_backoff_time.
#   See also $maximal_backoff_time.
queue_run_delay = 300s


# INTERNET HOST AND DOMAIN NAMES
# -----------------------------------------------------------------------------
# myhostname (default: see "postconf -d" output)
#   The myhostname parameter specifies  the internet hostname of this mail sys-
#   tem. The default is to use the FQDN from gethostname(). $myhostname is used
#   as a default value for many other configuration parameters.
myhostname = {{ postfix.mailconfig.myhostname }}

# mydomain (default: see "postconf -d" output)
#   The "mydomain" parameter specifies the local internet domain name.  The de-
#   fault is to use $myhostname minus the first component. $mydomain is used as
#   a default value for many other configuration parameters.
mydomain = {{ postfix.mailconfig.domainname }}


# SENDING MAIL
# -----------------------------------------------------------------------------
# myorigin (default: $myhostname)
#   The "myorigin" parameter specifies the domain  that locally-posted mail ap-
#   pears to come from. The default is to append $myhostname, which is fine for
#   small sites.
#
#   If you run a domain  with multiple  machines, you should (1) change this to
#   $mydomain and (2) set up a domain-wide alias database that aliases each us-
#   er to user@that.users.mailhost.  For the sake of consistency between sender
#   and recipient addresses,  "myorigin" also specifies the default domain name
#   that is appended to recipient addresses that have no @domain part.
myorigin = $myhostname

# transport_maps (default: empty)
#   Optional lookup tables with mappings from recipient address to (message de-
#   livery transport, next-hop destination). See transport(5) for details.
#
#   Pattern matching of domain names  is controlled  by the presence or absence
#   of "transport_maps"  in  the  "parent_domain_matches_subdomains"  parameter
#   value.  For safety reasons,  as of Postfix 2.3  this feature does not allow
#   $number substitutions in regular expression maps.
transport_maps = hash:/etc/postfix/transport

# best_mx_transport (default: empty)
#   Where the Postfix SMTP client should deliver email messages when it detects
#   a "mail loops back to myself" error condition.
#
#   This happens when the local MTA is the best  SMTP mail exchanger for a des-
#   tination  not listed in mydestination,  inet_interfaces,  proxy_interfaces,
#   virtual_alias_domains, or virtual_mailbox_domains.  By default, the Postfix
#   SMTP client returns such mail as undeliverable.
#
#   Specify, for example, "best_mx_transport = local" to pass the mail from the
#   Postfix  SMTP  client to the local(8) delivery agent.  You can  specify any
#   message delivery "transport" or "transport:nexthop"  that is defined in the
#   master.cf file. See the transport(5) manual page for the syntax and meaning
#   of "transport" or "transport:nexthop".
#
#   However, this feature is expensive because it ties up a Postfix SMTP client
#   process while the local(8) delivery agent is doing its work. It is more ef-
#   ficient (for Postfix) to list all hosted domains in a table or database.
best_mx_transport =

# smtp_fallback_relay (default: $fallback_relay)
#   Optional list of relay hosts for SMTP destinations that can not be found or
#   that are unreachable. With Postfix 2.2 and earlier this parameter is called
#   fallback_relay.
#
#   By default, mail is returned to the sender when a destination is not found,
#   and delivery is deferred when a destination is unreachable. With bulk email
#   deliveries, it can be beneficial to  run the fallback relay MTA on the same
#   host, so that it can reuse the sender IP address. This speeds up deliveries
#   that are delayed by IP-based reputation systems (greylist, etc.).
#
#   The fallback relays  must be  SMTP destinations.   Specify a domain,  host,
#   host:port, [host]:port, [address] or [address]:port;  the form [host] turns
#   off MX lookups. If you specify multiple SMTP destinations, Postfix will try
#   them in the specified order.
#
#   To prevent mailer loops between  MX hosts and fall-back hosts,  Postfix 2.2
#   and later  will not use the fallback relays  for destinations that it is MX
#   host for (assuming DNS lookup is turned on).
smtp_fallback_relay =

# sender_dependent_relayhost_maps (default: empty)
#   A sender-dependent override for the global relayhost parameter setting. The
#   tables are searched by the envelope sender address and "@domain".
#
#   A lookup result of DUNNO terminates the search without overriding the glob-
#   al "relayhost" parameter setting (Postfix 2.6 and later).  This information
#   is overruled with relay_transport, sender_dependent_default_transport_maps,
#   default_transport and with the transport(5) table.
#
#   This feature is available in Postfix 2.3 and later.
sender_dependent_relayhost_maps = hash:/etc/postfix/sendermt


# SMTP CLIENT
# -----------------------------------------------------------------------------
# smtp_connect_timeout (default: 30s)
#   The Postfix SMTP client time limit for completing a TCP connection, or zero
#   (use the operating system built-in time limit).  When no connection  can be
#   made within the deadline, the Postfix SMTP client tries the next address on
#   the mail exchanger list. Specify 0 to disable the time limit(i.e. use what-
#   ever timeout is implemented by the operating system).
smtp_connect_timeout = 60s

# smtp_helo_name (default: $myhostname)
#   The hostname to send in the SMTP HELO or EHLO command. The default value is
#   the machine hostname. Specify a hostname or "[ip.add.re.ss]". This informa-
#   tion can be specified in the main.cf file  for all SMTP clients,  or it can
#   be specified in the master.cf file for a specific client, for example:
#
#       /etc/postfix/master.cf: mysmtp ... smtp -o smtp_helo_name=foo.bar.com
#
#   This feature is available in Postfix 2.0 and later.
smtp_helo_name = $myhostname

# smtp_sasl_auth_enable (default: no)
#   Enable SASL authentication in the Postfix SMTP client.
smtp_sasl_auth_enable = no

# smtp_sasl_password_maps (default: empty)
#   Optional Postfix SMTP client lookup tables with one username:password entry
#   per sender,  remote hostname or next-hop domain.  Per-sender lookup is done
#   only when sender-dependent authentication is enabled.
#
#   If no "username:password" entry is found, then the Postfix SMTP client will
#   not attempt to authenticate to the remote host.  The Postfix SMTP client o-
#   pens the lookup table before going to chroot(1) jail,  so you can leave the
#   password file in /etc/postfix.
smtp_sasl_password_maps = hash:/etc/postfix/smtpauth

# smtp_sasl_security_options (default: noplaintext, noanonymous)
#   Postfix SMTP client SASL security options; as of Postfix 2.3 the list of a-
#   vailable features depends on the SASL client implementation that is select-
#   ed with smtp_sasl_type. The following security features are defined for the
#   cyrus client SASL implementation:
#
#   Specify zero or more of the following:
#     - noplaintext:  Disallow methods that use plaintext passwords.
#     - noactive:     Disallow methods subject to active (non-dictionary) at-
#                     tack.
#     - nodictionary: Disallow methods subject to passive (dictionary) attack.
#     - noanonymous:  Disallow methods that allow anonymous authentication.
#     - mutual_auth:  Only allow methods that provide mutual authentication
#                     (not available with SASL version 1).
smtp_sasl_security_options = noanonymous

# smtp_tls_policy_maps (default: empty)
#   Optional lookup tables with the Postfix SMTP client  TLS security policy by
#   next-hop destination;  when a non-empty  value is specified, this overrides
#   the obsolete "smtp_tls_per_site" parameter. See "TLS_README" for a more de-
#   tailed discussion of TLS  security levels. The TLS  policy table is indexed
#   by the full next-hop destination, which is either the recipient  domain, or
#   the verbatim  next-hop specified  in the transport table, $local_transport,
#   $virtual_transport,  $relay_transport or $default_transport.  This includes
#   any enclosing  square brackets and any non-default  destination server port
#   suffix. The LMTP socket type prefix (inet: or unix:) is not included in the
#   lookup key.
#
#   Only the next-hop domain, or "$myhostname" with LMTP over UNIX-domain sock-
#   ets, is used as the nexthop name for certificate verification. The port and
#   any enclosing square brackets are used in the table lookup key, but are not
#   used for server name verification.
#
#   When the lookup  key is a domain name  without enclosing square brackets or
#   any ":port" suffix (typically the recipient domain), and the full domain is
#   not found in the table, just as with the transport(5) table, the parent do-
#   main starting with a leading "." is matched recursively. This allows one to
#   specify a security policy for a recipient domain and all its sub-domains.
smtp_tls_policy_maps = hash:/etc/postfix/tlspolicies

# smtp_tls_protocols (default: !SSLv2, !SSLv3)
#   List of TLS protocols  that the Postfix SMTP client will exclude or include
#   with opportunistic TLS encryption. The default value is "!SSLv2,!SSLv3" for
#   Postfix releases after the middle of 2015, "!SSLv2" for older releases. Be-
#   fore Postfix 2.6,  the Postfix SMTP client would use all protocols with op-
#   portunistic TLS.
#
#   In main.cf the values are separated by whitespace, commas or colons. In the
#   policy table (see smtp_tls_policy_maps)  the only valid separator is colon.
#   An empty value  means allow  all protocols.  The valid protocol names, (see
#   SSL_get_version(3)), are "SSLv2", "SSLv3" and "TLSv1".
#
#   The range of protocols advertised  by an SSL/TLS client must be contiguous.
#   When a protocol version is enabled, disabling any higher version implicitly
#   disables  all versions  above that higher version.  Thus,  for example (as-
#   suming the OpenSSL library supports both SSLv2 and SSLv3):
#
#       smtp_tls_protocols = !SSLv2, !TLSv1
#
#   also disables any protocols version  higher than TLSv1 leaving only "SSLv3"
#   enabled.
#
#   Note: As of OpenSSL 1.0.1 two new protocols are defined, "TLSv1.1" and
#         "TLSv1.2". The latest patch levels of Postfix >= 2.6, and all
#         versions of Postfix ?= 2.10 can explicitly disable support for
#         "TLSv1.1" or "TLSv1.2"
#
#   OpenSSL 1.1.1 introduces support for  "TLSv1.3".  With Postfix >= 3.4, this
#   can be disabled, if need be, via "!TLSv1.3".
#
smtp_tls_protocols = !SSLv2, !SSLv3

# smtp_tls_security_level (default: empty)
#   The smtp_tls_security_level configuration parameter is the default SMTP TLS
#   security level for the Postfix SMTP client.
smtp_tls_security_level = may

# smtp_tls_CAfile (default: empty)
#   A file containing CA certificates of root CAs trusted to sign either remote
#   SMTP server certificates or intermediate CA certificates.  These are loaded
#   into memory before the smtp(8) client enters the chroot jail. If the number
#   of trusted roots is large, consider using smtp_tls_CApath instead, but note
#   that the latter directory must be present in the chroot jail if the smtp(8)
#   client is chrooted.  This file may also be  used to augment the client cer-
#   tificate trust chain,  but it is best to include all the  required certifi-
#   cates directly in $smtp_tls_cert_file.
#
#   Specify "smtp_tls_CAfile = /path/to/system_CA_file" to use ONLY the system-
#   supplied default Certification Authority certificates.
#
#   Specify "tls_append_default_CA = no" to prevent Postfix from appending the
#   system-supplied default CAs and trusting third-party certificates.
#smtp_tls_CAfile = /etc/pki/ca-trust/extracted/openssl/ca-bundle.trust.crt

# smtp_tls_CApath (default: empty)
#   The smtp_tls_CApath parameter is a  directory with PEM format Certification
#   Authority certificates that the Postfix SMTP client uses to verify a remote
#   SMTP server certificate. Do not forget to create the necessary "hash" links
#   with, for example, "$OPENSSL_HOME/bin/c_rehash /etc/postfix/certs".  To use
#   this option in chroot mode,  this directory (or a copy)  must be inside the
#   chroot jail.  Specify  "smtp_tls_CApath = /path/to/system_CA_directory"  to
#   use ONLY the system-supplied default Certification Authority certificates.
#
#   Specify "tls_append_default_CA = no" to prevent  Postfix from appending the
#   system-supplied default CAs and trusting third-party certificates.
#smtp_tls_CApath = /etc/pki/ca-trust/extracted/openssl

# smtp_tls_session_cache_database (default: empty)
#   The "smtp_tls_session_cache_database"  parameter is a name of the file con-
#   taining the optional Postfix SMTP client TLS session cache. Specify a data-
#   base type that supports enumeration, such as "btree" or "sdbm"; there is no
#   need to support concurrent access. The file is created if it doesn't exist.
#   The smtp(8) daemon does not use  this parameter directly,  rather the cache
#   is implemented indirectly in the tlsmgr(8) daemon.
#   This means that per-smtp-instance master.cf overrides of this parameter are
#   not effective. Note that each of the cache databases supported by tlsmgr(8)
#   daemon: $smtpd_tls_session_cache_database, $smtp_tls_session_cache_database
#   (and with Postfix 2.3 and later $lmtp_tls_session_cache_database), needs to
#   be stored separately.
#   It is not at this time possible to store multiple caches in a single data-
#   base.
#
#   Note: dbm databases are not suitable. TLS session objects are too large.
#
#   As of version 2.5, Postfix no longer uses root privileges when opening this
#   file. The file should now be stored under the Postfix-owned data_directory.
#   As a migration aid,  an attempt to open the file under a non-Postfix direc-
#   tory is redirected to the Postfix-owned "data_directory",  and a warning is
#   logged.
smtp_tls_session_cache_database = btree:${data_directory}/smtp-session-cache


# CONNECTION CACHE
# -----------------------------------------------------------------------------
# connection_cache_protocol_timeout (default: 5s)
#   The "connection_cache_protocol_timeout" configuration parameter is the time
#   limit for  connection cache  connect, send or receive operations.  The time
#   limit is enforced in the client.
connection_cache_protocol_timeout = 5s

# connection_cache_ttl_limit (default: 2s)
#   The connection_cache_ttl_limit parameter is the maximal "time-to-live" val-
#   ue that the scache(8) connection cache server allows. Requests that specify
#   a larger TTL will be stored with the maximum allowed TTL.
#
#   The purpose of this additional  control is to protect the infrastructure a-
#   gainst careless people. The cache TTL is already bounded by $max_idle.
connection_cache_ttl_limit = 2s

# smtp_connection_cache_destinations (default: empty)
#   Permanently enable  SMTP connection caching for the specified destinations.
#   With SMTP connection caching,  a connection is not closed immediately after
#   completion of a mail transaction.  Instead, the connection is kept open for
#   up to $smtp_connection_cache_time_limit seconds. This allows connections to
#   be reused for other deliveries, and can improve mail delivery performance.
#
#     - if mail is sent without a relay host: a domain name (the right-hand
#       side of an email address, without the [] around a numeric IP address),
#     - if mail is sent via a relay host: a relay host name (without [] or
#       non-default TCP port), as specified in main.cf or in the transport map,
#     - if mail is sent via a UNIX-domain socket: a pathname (without the unix:
#       prefix),
#     - a /file/name with domain names and/or relay host names as defined
#       above,
#     - a "type:table" with domain names and/or relay host names on the left-
#       hand side. The right-hand side result from "type:table" lookups is ig-
#       nored.
smtp_connection_cache_destinations = hash:/etc/postfix/conncache


# PARALLEL DELIVERY TO THE SAME DESTINATION
# -----------------------------------------------------------------------------
# local_destination_concurrency_limit (default: 2)
#   The maximal number of parallel deliveries via the local mail delivery tran-
#   sport to the same recipient  (when "local_destination_recipient_limit = 1")
#   or the maximal number of parallel deliveries to the same local domain (when
#   "local_destination_recipient_limit  >  1").  This limit is enforced  by the
#   queue manager.  The message delivery transport name  is the first field  in
#   the entry in the master.cf file.  A low limit of 2 is recommended,  just in
#   case someone has an expensive shell command  in a ".forward" file  or in an
#   alias (e.g., a mailing list manager).  You don't want to run  lots of those
#   at the same time.
local_destination_concurrency_limit = 2
 
# default_destination_concurrency_limit (default: 20)
#   Each message delivery transport has its "XXX_destination_concurrency_limit"
#   parameter.  The default is $default_destination_concurrency_limit  for most
#   delivery transports. For the local delivery agent the default is 2.
default_destination_concurrency_limit = 20

# initial_destination_concurrency (default: 5)
#   The initial_destination_concurrency configuration  parameter is the initial
#   per-destination concurrency level  for parallel delivery to the same desti-
#   nation. With per-destination recipient limit > 1,a destination is a domain,
#   otherwise it is a recipient.
#
#   Use "transport_initial_destination_concurrency" to specify a transport-spe-
#   cific override, where transport is the master.cf name of the message deliv-
#   ery transport (Postfix 2.5 and later).
#
#   Warning: with concurrency of 1,  one bad message can be enough to block all
#            mail to a site.
initial_destination_concurrency = 5


# RECEIVING MAIL
# -----------------------------------------------------------------------------
# inet_interfaces (default: all)
#   The "inet_interfaces" parameter specifies  the network interface  addresses
#   that this mail system receives mail on. By default, the software claims all
#   active interfaces on the machine.  The parameter also controls  delivery of
#   mail to "user@[ip.address]". See also the "proxy_interfaces" parameter, for
#   network addresses  that are forwarded to us via a proxy or  network address
#   translator.
#
#   Note: you need to stop/start Postfix when this parameter changes.
#
#inet_interfaces = $myhostname
#inet_interfaces = $myhostname, localhost
#inet_interfaces = localhost
inet_interfaces = all

# inet_protocols (default: all)
#   The Internet protocols Postfix will attempt to use when making or accepting
#   connections. The form "all" is equivalent to "ipv4,ipv6" or "ipv4", depend-
#   ing on whether the operating system implements IPv6.
#
#   With Postfix 2.8 and earlier the default is "ipv4".  For backwards compati-
#   bility with these releases, the Postfix 2.9 and later upgrade procedure ap-
#   pends an explicit  "inet_protocols = ipv4"  setting to main.cf  when no ex-
#   plicit setting is present. This compatibility workaround will be phased out
#   as IPv6 deployment becomes more common.
#
#   Note: you MUST stop and start Postfix after changing this parameter.
#
#   On systems that pre-date "IPV6_V6ONLY" support (RFC 3493), an "IPv6" server
#   will also "accept IPv4 connections",  even when IPv4 is turned off with the
#   inet_protocols parameter. On systems with IPV6_V6ONLY support, Postfix will
#   use separate server sockets  for  IPv6 and IPv4,  and each will accept only
#   connections for the corresponding protocol.
#
#   When IPv4 support is enabled via the inet_protocols parameter, Postfix will
#   look up DNS type "A" records, and will convert "IPv4-in-IPv6" client IP ad-
#   dresses (::ffff:1.2.3.4) to their original IPv4 form (1.2.3.4).  The latter
#   is needed on hosts that pre-date IPV6_V6ONLY support (RFC 3493).
#
#   When IPv6 support is enabled via the inet_protocols parameter, Postfix will
#   do DNS type AAAA record lookups.
#
#   When both IPv4 and IPv6 support are enabled,  the Postfix SMTP client  will
#   choose the protocol as specified with the "smtp_address_preference" parame-
#   ter.  Postfix versions before 2.8 attempt to connect  via "IPv6" before at-
#   tempting to use IPv4.
inet_protocols = ipv4

# proxy_interfaces (default: empty)
#   The "proxy_interfaces" parameter specifies  the network interface addresses
#   that this mail system receives mail on by way of a proxy or network address
#   translation unit.  This setting extends the address list specified with the
#   inet_interfaces parameter.
#
#   You must specify your proxy/NAT addresses when your system is a backup "MX"
#   host for other domains,  otherwise mail delivery loops will happen when the
#   primary MX host is down.
#
#proxy_interfaces =
#proxy_interfaces = 1.2.3.4

# mydestination (default: $myhostname, localhost.$mydomain, localhost)
#   The mydestination parameter specifies the list of domains that this machine
#   considers itself the final destination for. These domains are routed to the
#   delivery agent specified  with the "local_transport" parameter setting.  By
#   default, that is the UNIX compatible delivery agent that lookups all recip-
#   ients in /etc/passwd and /etc/aliases or their equivalent.
#
#   The default is $myhostname + localhost.$mydomain. On a mail domain gateway,
#   you should also include $mydomain.
#
#   Do not specify the names of virtual domains --- those domains are specified
#   elsewhere (see VIRTUAL_README).
#
#   Don't specify the names of domains that this machine is backup MX host for.
#   Specify those names  via the relay_domains settings for the SMTP server, or
#   use permit_mx_backup if you are lazy (see STANDARD_CONFIGURATION_README).
#
#   The local machine  is always  the final destination  for mail addressed  to
#   "user@[the.net.work.address]" of an interface that the mail system receives
#   mail on (see the inet_interfaces parameter).
#
#   See also below, section "REJECTING MAIL FOR UNKNOWN LOCAL USERS".
mydestination = $myhostname, localhost

# empty_address_recipient (default: MAILER-DAEMON)
#   The recipient of mail addressed to the "<>": null address. Postfix does not
#   accept such addresses in SMTP commands,  but they may  still be created lo-
#   cally as the result of configuration or software error.
empty_address_recipient = MAILER-DAEMON

# always_bcc (default: empty)
#   Optional address that receives a BCC:blind carbon copy of each message that
#   is received by the Postfix mail system.
#
#   Note: with Postfix 2.3 and later the BCC address is added as if it was
#         specified with NOTIFY=NONE. The sender will not be notified when
#         the BCC address is undeliverable, as long as all down-stream software
#         implements RFC 3461.
#
#   Note: with Postfix 2.2 and earlier the sender will be notified when the
#         BCC address is undeliverable.
#
#   Note: automatic BCC recipients are produced only for new mail. To avoid
#         mailer loops, automatic BCC recipients are not generated after
#         Postfix forwards mail internally, or after Postfix generates mail
#         itself.
always_bcc =

# sender_bcc_maps (default: empty)
#   Optional BCC  (blind carbon-copy) address lookup tables,  indexed by sender
#   address. The BCC address (multiple results are not supported) is added when
#   mail enters from outside of Postfix.
#
#   The table search order is as follows:
#     - Look up the "user+extension@domain.tld" address including the optional
#       address extension.
#     - Look up the "user@domain.tld" address without the optional address
#       extension.
#     - Look up the "user+extension" address local part when the sender domain
#       equals $myorigin, $mydestination, $inet_interfaces or $proxy_interfaces.
#     - Look up the "user" address local part when the sender domain equals
#       $myorigin, $mydestination, $inet_interfaces or $proxy_interfaces.
#     - Look up the "@domain.tld" part.
#
#   Note: with Postfix 2.3 and later the BCC address is added as if it was
#         specified with NOTIFY=NONE. The sender will not be notified when the
#         BCC address is undeliverable, as long as all down-stream software im-
#         plements RFC 3461.
#
#   Note: with Postfix 2.2 and earlier the sender will be notified when the BCC
#         address is undeliverable.
#
#   Note: automatic BCC recipients are produced only for new mail. To avoid
#         mailer loops, automatic BCC recipients are not generated after
#         Postfix forwards mail internally, or after Postfix generates mail
#         itself.
sender_bcc_maps =

# recipient_bcc_maps (default: empty)
#   Optional BCC:"blind carbon-copy" addresslookup tables, indexed by recipient
#   address. The BCC address (multiple results are not supported) is added when
#   mail enters from outside of Postfix.
#
#   The table search order is as follows:
#     - Look up the "user+extension@domain.tld" address including the optional
#       address extension.
#     - Look up the "user@domain.tld" address without the optional address
#       extension.
#     - Look up the "user+extension" address local part when the recipient
#       domain equals $myorigin, $mydestination, $inet_interfaces or
#       $proxy_interfaces.
#     - Look up the "user" address local part when the recipient domain equals
#       $myorigin, $mydestination, $inet_interfaces or $proxy_interfaces.
#     - Look up the "@domain.tld" part.
#
#   Note: with Postfix 2.3 and later the BCC address is added as if it was
#         specified with NOTIFY=NONE. The sender will not be notified when the
#         BCC address is undeliverable, as long as all down-stream software im-
#         plements RFC 3461.
#
#   Note: with Postfix 2.2 and earlier the sender will unconditionally be noti-
#         fied when the BCC address is undeliverable.
#
#   Note: automatic BCC recipients are produced only for new mail. To avoid
#         mailer loops, automatic BCC recipients are not generated after
#         Postfix forwards mail internally, or after Postfix generates mail
#         itself.
recipient_bcc_maps =

# disable_vrfy_command (default: no)
#   Disable the SMTP "VRFY" command. This stops some techniques used to harvest
#   email addresses.
disable_vrfy_command = yes


# SMTP SERVER
# -----------------------------------------------------------------------------
# smtpd_hard_error_limit (default: normal: 20, overload: 1)
#   The "smtpd_hard_error_limit" configuration parameter  is the maximal number
#   of errors a remote SMTP client is  allowed to make without delivering mail.
#   The Postfix SMTP server disconnects when the limit is exceeded.
#
#   Normally the default limit is 20,  but it changes under overload to just 1.
#   With Postfix 2.5 and earlier, the SMTP server always allows up to 2" errors
#   by default.
#smtpd_hard_error_limit = ${stress?1}${stress:20}

# smtpd_delay_open_until_valid_rcpt (default: yes)
#   Postpone the start of an SMTP mail transaction until a valid "RCPT TO" com-
#   mand is received. Specify  "no" to create a mail transaction as soon as the
#   Postfix SMTP server receives  a valid "MAIL FROM" command.  With sites that
#   reject lots of mail, the  default setting reduces the  use of disk, CPU and
#   memory resources. The downside is that rejected recipients are logged with
#   "NOQUEUE" instead of a mail transaction ID. This complicates the logfile a-
#   nalysis of multi-recipient mail.
#
#   This feature is available in Postfix 2.3 and later.
#smtpd_delay_open_until_valid_rcpt = yes

# smtpd_delay_reject (default: yes)
#   Wait until the RCPT TO command before evaluating:
#     - $smtpd_client_restrictions
#     - $smtpd_helo_restrictions
#     - $smtpd_sender_restrictions
#   or wait until the ETRN command before evaluating:
#     - $smtpd_client_restrictions
#     - $smtpd_helo_restrictions
#
#   This feature is  turned on by default because  some clients apparently mis-
#   behave when the Postfix SMTP server rejects  commands before "RCPT TO". The
#   default setting has one major benefit:  it allows Postfix to  log recipient
#   address information when rejecting a client name/address or sender address,
#   so that it is possible to find out whose mail is being rejected.
smtpd_delay_reject = yes

# smtpd_client_restrictions (default: empty)
#   Optional restrictions  that the Postfix SMTP server  applies in the context
#   of a client connection request. See "SMTPD_ACCESS_README", section "Delayed
#   evaluation of SMTP access restriction lists" for a discussion of evaluation
#   context and time.
#
#   The default is to allow all connection requests. The following restrictions
#   are specific to client hostname or client network address information.
#
#   - check_ccert_access type:table
#       Use the remote SMTP client certificate fingerprint or the public key
#       fingerprint (Postfix 2.9 and later) as lookup key for the specified
#       access(5) database; with Postfix version 2.2, also require that the re-
#       mote SMTP client certificate is verified successfully. The fingerprint
#       digest algorithm is configurable via the smtpd_tls_fingerprint_digest
#       parameter (hard-coded as md5 prior to Postfix version 2.5). This fea-
#       ture is available with Postfix version 2.2 and later.
#
#   - check_client_access type:table
#       Search the specified access database for the client hostname, parent
#       domains, client IP address, or networks obtained by stripping least
#       significant octets. See the access(5) manual page for details.
#
#   - check_client_a_access type:table
#       Search the specified access(5) database for the IP addresses for the
#       client hostname, and execute the corresponding action. Note: a result
#       of "OK" is not allowed for safety reasons. Instead, use DUNNO in order
#       to exclude specific hosts from blacklists. This feature is available in
#       Postfix 3.0 and later.
#
#   - check_client_mx_access type:table
#       Search the specified access(5) database for the MX hosts for the client
#       hostname, and execute the corresponding action. Note: a result of "OK"
#       is not allowed for safety reasons. Instead, use DUNNO in order to ex-
#       clude specific hosts from blacklists.
#       This feature is available in Postfix 2.7 and later.
#
#   - check_client_ns_access type:table
#       Search the specified access(5) database for the DNS servers for the
#       client hostname, and execute the corresponding action. Note: a result
#       of "OK" is not allowed for safety reasons. Instead, use DUNNO in order
#       to exclude specific hosts from blacklists. This feature is available in
#       Postfix 2.7 and later.
#
#   - check_reverse_client_hostname_access type:table
#       Search the specified access database for the unverified reverse client
#       hostname, parent domains, client IP address, or networks obtained by
#       stripping least significant octets. See the access(5) manual page for
#       details. Note: a result of "OK" is not allowed for safety reasons. In-
#       stead, use DUNNO in order to exclude specific hosts from blacklists.
#       This feature is available in Postfix 2.6 and later.
#
#   - check_reverse_client_hostname_a_access type:table
#       Search the specified access(5) database for the IP addresses for the
#       unverified reverse client hostname, and execute the corresponding ac-
#       tion. Note: a result of "OK" is not allowed for safety reasons. In-
#       stead, use DUNNO in order to exclude specific hosts from blacklists.
#       This feature is available in Postfix 3.0 and later.
#
#   - check_reverse_client_hostname_mx_access type:table
#       Search the specified access(5) database for the MX hosts for the unver-
#       ified reverse client hostname, and execute the corresponding action.
#       Note: a result of "OK" is not allowed for safety reasons. Instead, use
#       DUNNO in order to exclude specific hosts from blacklists. This feature
#       is available in Postfix 2.7 and later.
#
#   - check_reverse_client_hostname_ns_access type:table
#       Search the specified access(5) database for the DNS servers for the un-
#       verified reverse client hostname, and execute the corresponding action.
#       Note: a result of "OK" is not allowed for safety reasons. Instead, use
#       DUNNO in order to exclude specific hosts from blacklists. This feature
#       is available in Postfix 2.7 and later.
#
#   - check_sasl_access type:table
#       Use the remote SMTP client SASL user name as lookup key for the speci-
#       fied access(5) database.
#       The lookup key has the form "username@domainname" when the
#       smtpd_sasl_local_domain parameter value is non-empty. Unlike the
#       check_client_access feature, check_sasl_access does not perform matches
#       of parent domains or IP subnet ranges. This feature is available with
#       Postfix version 2.11 and later.
#
#   - permit_inet_interfaces
#       Permit the request when the client IP address matches $inet_interfaces.
#
#   - permit_mynetworks
#       Permit the request when the client IP address matches any network or
#       network address listed in $mynetworks.
#
#   - permit_sasl_authenticated
#       Permit the request when the client is successfully authenticated via
#       the RFC 4954 (AUTH) protocol.
#
#   - permit_tls_all_clientcerts
#       Permit the request when the remote SMTP client certificate is verified
#       successfully. This option must be used only if a special CA issues the
#       certificates and only this CA is listed as trusted CA. Otherwise, cli-
#       ents with a third-party certificate would also be allowed to relay.
#       Specify "tls_append_default_CA = no" when the trusted CA is specified
#       with smtpd_tls_CAfile or smtpd_tls_CApath, to prevent Postfix from ap-
#       pending the system-supplied default CAs. This feature is available with
#       Postfix version 2.2.
#
#   - permit_tls_clientcerts
#       Permit the request when the remote SMTP client certificate fingerprint
#       or public key fingerprint (Postfix version 2.9 and later) is listed in
#       $relay_clientcerts. The fingerprint digest algorithm is configurable
#       via the smtpd_tls_fingerprint_digest parameter (hard-coded as md5 prior
#       to Postfix version 2.5). This feature is available with Postfix version
#       2.2.
#
#   - reject_rbl_client rbl_domain=d.d.d.d
#       Reject the request when the reversed client network address is listed
#       with the A record "d.d.d.d" under rbl_domain (Postfix version 2.1 and
#       later only). Each "d" is a number, or a pattern inside "[]" that con-
#       tains one or more ";"-separated numbers or number..number ranges
#       (Postfix version 2.8 and later). If no "=d.d.d.d" is specified, reject
#       the request when the reversed client network address is listed with any
#       A record under rbl_domain.
#
#       The maps_rbl_reject_code parameter specifies the response code for re-
#       jected requests (default: 554), the default_rbl_reply parameter speci-
#       fies the default server reply, and the rbl_reply_maps parameter speci-
#       fies tables with server replies indexed by rbl_domain. This feature is
#       available in Postfix 2.0 and later.
#
#   - permit_dnswl_client dnswl_domain=d.d.d.d
#       Accept the request when the reversed client network address is listed
#       with the A record "d.d.d.d" under dnswl_domain. Each "d" is a number,
#       or a pattern inside "[]" that contains one or more ";"-separated num-
#       bers or number..number ranges. If no "=d.d.d.d" is specified, accept
#       the request when the reversed client network address is listed with any
#       A record under dnswl_domain. 
#
#       For safety, permit_dnswl_client is silently ignored when it would over-
#       ride reject_unauth_destination.  The result is "DEFER_IF_REJECT" when
#       whitelist lookup fails. This feature is available in Postfix 2.8 and
#       later.
#
#   - reject_rhsbl_client rbl_domain=d.d.d.d
#       Reject the request when the client hostname is listed with the A record
#       "d.d.d.d" under rbl_domain (Postfix version 2.1 and later only). Each
#       "d" is a number, or a pattern inside "[]" that contains one or more
#       ";"-separated numbers or number..number ranges (Postfix version 2.8 and
#       later). If no "=d.d.d.d" is specified, reject the request when the cli-
#       ent hostname is listed with any A record under rbl_domain. See the re-
#       ject_rbl_client description above for additional RBL related configura-
#       tion parameters. This feature is available in Postfix 2.0 and later;
#       with Postfix version 2.8 and later, reject_rhsbl_reverse_client will
#       usually produce better results.
#
#   - permit_rhswl_client rhswl_domain=d.d.d.d
#       Accept the request when the client hostname is listed with the A record
#       "d.d.d.d" under rhswl_domain. Each "d" is a number, or a pattern inside
#       "[]" that contains one or more ";"-separated numbers or number..number
#       ranges. If no "=d.d.d.d" is specified, accept the request when the cli-
#       ent hostname is listed with any A record under rhswl_domain. 
#
#       Caution: client name whitelisting is fragile, since the client name
#                lookup can fail due to temporary outages. Client name white-
#                listing should be used only to reduce false positives in e.g.
#                DNS-based blocklists, and not for making access rule excep-
#                tions. 
#
#       For safety, permit_rhswl_client is silently ignored when it would over-
#       ride reject_unauth_destination. The result is DEFER_IF_REJECT when
#       whitelist lookup fails. This feature is available in Postfix 2.8 and
#       later.
#
#   - reject_rhsbl_reverse_client rbl_domain=d.d.d.d
#       Reject the request when the unverified reverse client hostname is list-
#       ed with the A record "d.d.d.d" under rbl_domain. Each "d" is a number,
#       or a pattern inside "[]" that contains one or more ";"-separated num-
#       bers or number..number ranges. If no "=d.d.d.d" is specified, reject
#       the request when the unverified reverse client hostname is listed with
#       any A record under rbl_domain. See the reject_rbl_client description
#       above for additional RBL related configuration parameters. This feature
#       is available in Postfix 2.8 and later.
#
#   - reject_unknown_client_hostname (with Postfix < 2.3: reject_unknown_client)
#       Reject the request when
#         1) the client IP address->name mapping fails, or
#         2) the name->address mapping fails, or
#         3) the name->address mapping does not match the client IP address.
#       This is a stronger restriction than the
#       reject_unknown_reverse_client_hostname feature, which triggers only un-
#       der condition 1) above. The unknown_client_reject_code parameter speci-
#       fies the response code for rejected requests (default: 450). The reply
#       is always 450 in case the address->name or name->address lookup failed
#       due to a temporary problem.
#
#   - reject_unknown_reverse_client_hostname
#       Reject the request when the client IP address has no address->name map-
#       ping. This is a weaker restriction than the
#       reject_unknown_client_hostname feature, which requires not only that
#       the address->name and name->address mappings exist, but also that the
#       two mappings reproduce the client IP address. 
#
#       The unknown_client_reject_code parameter specifies the response code
#       for rejected requests (default: 450). The reply is always 450 in case
#       the address->name lookup failed due to a temporary problem. This fea-
#       ture is available in Postfix 2.3 and later.
#
#   In addition,  you can use any of the following generic restrictions.  These
#   restrictions are applicable in any SMTP command context.
#
#   - check_policy_service servername
#       Query the specified policy server. See the SMTPD_POLICY_README document
#       for details. This feature is available in Postfix 2.1 and later.
#
#   - defer
#       Defer the request. The client is told to try again later. This restric-
#       tion is useful at the end of a restriction list, to make the default
#       policy explicit. The defer_code parameter specifies the SMTP server re-
#       ply code (default: 450).
#
#   - defer_if_permit
#       Defer the request if some later restriction would result in an explicit
#       or implicit PERMIT action. This is useful when a blacklisting feature
#       fails due to a temporary problem. This feature is available in Postfix
#       version 2.1 and later.
#
#   - defer_if_reject
#       Defer the request if some later restriction would result in a REJECT
#       action. This is useful when a whitelisting feature fails due to a tem-
#       porary problem. This feature is available in Postfix version 2.1 and
#       later.
#
#   - permit
#       Permit the request. This restriction is useful at the end of a restric-
#       tion list, to make the default policy explicit.
#
#   - reject_multi_recipient_bounce
#       Reject the request when the envelope sender is the null address, and
#       the message has multiple envelope recipients. This usage has rare but
#       legitimate applications: under certain conditions, multi-recipient mail
#       that was posted with the DSN option NOTIFY=NEVER may be forwarded with
#       the null sender address. 
#
#       Note: this restriction can only work reliably when used in
#             smtpd_data_restrictions or smtpd_end_of_data_restrictions, be-
#             cause the total number of recipients is not known at an earlier
#             stage of the SMTP conversation. Use at the RCPT stage will only
#             reject the second etc. recipient. 
#
#       The multi_recipient_bounce_reject_code parameter specifies the response
#       code for rejected requests (default: 550). This feature is available in
#       Postfix 2.1 and later.
#
#   - reject_plaintext_session
#       Reject the request when the connection is not encrypted. This restric-
#       tion should not be used before the client has had a chance to negotiate
#       encryption with the AUTH or STARTTLS commands.
#
#       The plaintext_reject_code parameter specifies the response code for re-
#       jected requests (default: 450). This feature is available in Postfix
#       2.3 and later.
#
#   - reject_unauth_pipelining
#       Reject the request when the client sends SMTP commands ahead of time
#       where it is not allowed, or when the client sends SMTP commands ahead
#       of time without knowing that Postfix actually supports ESMTP command
#       pipelining. This stops mail from bulk mail software that improperly uses
#       ESMTP command pipelining in order to speed up deliveries. 
#
#       With Postfix 2.6 and later, the SMTP server sets a per-session flag
#       whenever it detects illegal pipelining, including pipelined HELO or
#       EHLO commands. The reject_unauth_pipelining feature simply tests wheth-
#       er the flag was set at any point in time during the session. 
#
#       With older Postfix versions, reject_unauth_pipelining checks the cur-
#       rent status of the input read queue, and its usage is not recommended
#       in contexts other than smtpd_data_restrictions.
#
#   - reject
#       Reject the request. This restriction is useful at the end of a restric-
#       tion list, to make the default policy explicit. The reject_code config-
#       uration parameter specifies the response code for rejected requests
#       (default: 554).
#
#   - sleep seconds
#       Pause for the specified number of seconds and proceed with the next re-
#       striction in the list, if any. This may stop zombie mail when used as:
#           /etc/postfix/main.cf:
#               smtpd_client_restrictions = sleep 1, reject_unauth_pipelining
#                   smtpd_delay_reject = no
#
#   - warn_if_reject
#       A safety net for testing. When "warn_if_reject" is placed before a
#       reject-type restriction, access table query, or check_policy_service
#       query, this logs a "reject_warning" message instead of rejecting a re-
#       quest (when a reject-type restriction fails due to a temporary error,
#       this logs a "reject_warning" message for any implicit "defer_if_permit"
#       actions that would normally prevent mail from being accepted by some
#       later access restriction). This feature has no effect on
#       defer_if_reject restrictions.
#
#   Other restrictions that are valid in this context:
#     - SMTP command specific restrictions that are described under the
#       smtpd_helo_restrictions, smtpd_sender_restrictions or
#       smtpd_recipient_restrictions parameters. When helo, sender or recipient
#       restrictions are listed under smtpd_client_restrictions, they have ef-
#       fect only with "smtpd_delay_reject = yes", so that
#       $smtpd_client_restrictions is evaluated at the time of the RCPT TO com-
#       mand.
smtpd_client_restrictions = permit_mynetworks, permit_inet_interfaces,
    check_client_access cidr:/etc/postfix/connaccess, permit

# smtpd_relay_restrictions (default: permit_mynetworks, permit_sasl_authenticated, defer_unauth_destination)
#   The "smtp_relay_restrictions" parameter is the access restrictions for mail
#   relay control that  the Postfix SMTP  server applies in the  context of the
#   RCPT TO command, before smtpd_recipient_restrictions. 
#
#   See  "SMTPD_ACCESS_README",  section "Delayed evaluation of SMTP access re-
#   striction lists" for a discussion of evaluation context and time.
#
#   With Postfix versions before 2.10,  the rules for relay permission and spam
#   blocking were combined  under "smtpd_recipient_restrictions",  resulting in
#   error-prone configuration.  As of Postfix 2.10,  relay permission rules are
#   preferably implemented with smtpd_relay_restrictions,  so that a permissive
#   spam blocking policy  under smtpd_recipient_restrictions will no longer re-
#   sult in a permissive mail relay policy.
#
#   For backwards compatibility,  sites that migrate from  Postfix versions be-
#   fore 2.10  can set "smtpd_relay_restrictions" to the  empty value,  and use
#   smtpd_recipient_restrictions exactly as before.
#
#   By default, the Postfix SMTP server accepts:
#     - Mail from clients whose IP address matches $mynetworks, or:
#     - Mail to remote destinations that match $relay_domains, except for ad-
#       dresses that contain sender-specified routing (user@elsewhere@domain),
#       or:
#     - Mail to local destinations that match $inet_interfaces or
#       $proxy_interfaces, $mydestination, $virtual_alias_domains, or
#       $virtual_mailbox_domains.
#
#   IMPORTANT:
#     Either the smtpd_relay_restrictions or the smtpd_recipient_restrictions
#     parameter must specify at least one of the following restrictions.
#     Otherwise Postfix will refuse to receive mail:
#       - reject: reject_unauth_destination
#       - defer:  defer_if_permit, defer_unauth_destination
#
#   This feature is available in Postix 2.10 and later.
smtpd_relay_restrictions = permit_mynetworks, permit_inet_interfaces,
    permit_sasl_authenticated, defer_unauth_destination

# smtpd_peername_lookup (default: yes)
#   Attempt to  look up  the remote SMTP client hostname,  and verify  that the
#   name matches the client IP address. A client name  is set to "unknown" when
#   it cannot be looked  up or verified, or when name lookup is disabled. Turn-
#   ing off name lookup reduces delays due to DNS lookup and increases the max-
#   imal inbound delivery rate.
smtpd_peername_lookup = yes


# SMTP COMMAND
# -----------------------------------------------------------------------------
# smtpd_helo_required (default: no)
#   Require that a remote SMTP client introduces itself with the HELO or "EHLO"
#   command before sending the MAIL command or other commands that require EHLO
#   negotiation.
smtpd_helo_required = yes

# smtpd_helo_restrictions (default: empty)
#   Optional restrictions  that the Postfix SMTP server applies  in the context
#   of a client HELO command. See SMTPD_ACCESS_README, section "Delayed evalua-
#   tion of SMTP access restriction lists"  for a discussion of evaluation con-
#   text and time.
#
#   The default is to permit everything.
#
#   Note: specify "smtpd_helo_required = yes" to fully enforce this restriction
#         (without "smtpd_helo_required = yes", a client can simply skip
#         smtpd_helo_restrictions by not sending HELO or EHLO).
#
#   The following restrictions are specific to the hostname information receiv-
#   ed with the HELO or EHLO command.
#
#   - check_helo_access type:table
#       Search the specified access(5) database for the HELO or EHLO hostname
#       or parent domains, and execute the corresponding action. Note: specify
#       "smtpd_helo_required = yes" to fully enforce this restriction (without
#       "smtpd_helo_required = yes", a client can simply skip check_helo_access
#       by not sending HELO or EHLO).
#
#   - check_helo_a_access type:table
#       Search the specified access(5) database for the IP addresses for the
#       HELO or EHLO hostname, and execute the corresponding action. 
#       Note 1:
#           a result of "OK" is not allowed for safety reasons. Instead, use
#           DUNNO in order to exclude specific hosts from blacklists.
#       Note 2:
#           specify "smtpd_helo_required = yes" to fully enforce this restric-
#           tion (without "smtpd_helo_required = yes", a client can simply skip
#           check_helo_a_access by not sending HELO or EHLO). This feature is
#           available in Postfix 3.0 and later.
#
#   - check_helo_mx_access type:table
#       Search the specified access(5) database for the MX hosts for the HELO
#       or EHLO hostname, and execute the corresponding action.
#       Note 1:
#           a result of "OK" is not allowed for safety reasons. Instead, use
#           DUNNO in order to exclude specific hosts from blacklists.
#       Note 2:
#           specify "smtpd_helo_required = yes" to fully enforce this restric-
#           tion (without "smtpd_helo_required = yes", a client can simply skip
#           check_helo_mx_access by not sending HELO or EHLO). This feature is
#           available in Postfix 2.1 and later.
#
#   - check_helo_ns_access type:table
#       Search the specified access(5) database for the DNS servers for the
#       HELO or EHLO hostname, and execute the corresponding action.
#
#       Note 1: a result of "OK" is not allowed for safety reasons. Instead,
#               use DUNNO in order to exclude specific hosts from blacklists.
#
#       Note 2: specify "smtpd_helo_required = yes" to fully enforce this re-
#               striction (without "smtpd_helo_required = yes", a client can
#               simply skip check_helo_ns_access by not sending HELO or EHLO).
#
#       This feature is available in Postfix 2.1 and later.
#
#   - reject_invalid_helo_hostname (with Postfix < 2.3: reject_invalid_hostname)
#       Reject the request when the HELO or EHLO hostname is malformed.
#       Note:
#           specify "smtpd_helo_required = yes" to fully enforce this restric-
#           tion (without "smtpd_helo_required = yes", a client can simply skip
#           reject_invalid_helo_hostname by not sending HELO or EHLO). 
#       The invalid_hostname_reject_code specifies the response code for re-
#       jected requests (default: 501).
#
#   - reject_non_fqdn_helo_hostname (with Postfix < 2.3: reject_non_fqdn_hostname)
#       Reject the request when the HELO or EHLO hostname is not in fully-qual-
#       ified domain or address literal form, as required by the RFC.
#
#       Note: specify "smtpd_helo_required = yes" to fully enforce this re-
#             striction (without "smtpd_helo_required = yes", a client can sim-
#             ply skip "reject_non_fqdn_helo_hostname" by not sending HELO or
#             EHLO). 
#
#       The non_fqdn_reject_code parameter specifies the response code for re-
#       jected requests (default: 504).
#
#   - reject_rhsbl_helo rbl_domain=d.d.d.d
#       Reject the request when the HELO or EHLO hostname is listed with the A
#       record "d.d.d.d" under rbl_domain (Postfix version 2.1 and later only).
#       Each "d" is a number, or a pattern inside "[]" that contains one or
#       more ";"-separated numbers or number..number ranges (Postfix version
#       2.8 and later). If no "=d.d.d.d" is specified, reject the request when
#       the HELO or EHLO hostname is listed with any A record under rbl_domain.
#       See the reject_rbl_client description for additional RBL related con-
#       figuration parameters. Note: specify "smtpd_helo_required = yes" to
#       fully enforce this restriction (without "smtpd_helo_required = yes", a
#       client can simply skip reject_rhsbl_helo by not sending HELO or EHLO).
#       This feature is available in Postfix 2.0 and later.
#
#   - reject_unknown_helo_hostname (with Postfix < 2.3: reject_unknown_hostname)
#       Reject the request when the HELO or EHLO hostname has no DNS A or MX
#       record.  The reply is specified with the unknown_hostname_reject_code
#       parameter (default: 450) or unknown_helo_hostname_tempfail_action (de-
#       fault: defer_if_permit). See the respective parameter descriptions for
#       details. 
#
#       Note: specify "smtpd_helo_required = yes" to fully enforce this re-
#             striction (without "smtpd_helo_required = yes", a client can sim-
#             ply skip "reject_unknown_helo_hostname" by not sending HELO or
#             EHLO).
#
#   Other restrictions that are valid in this context:
#     - Generic restrictions that can be used in any SMTP command context,
#       described under smtpd_client_restrictions.
#     - Client hostname or network address specific restrictions described un-
#       der smtpd_client_restrictions.
#     - SMTP command specific restrictions described under
#       smtpd_sender_restrictions or smtpd_recipient_restrictions. When sender
#       or recipient restrictions are listed under smtpd_helo_restrictions,
#       they have effect only with "smtpd_delay_reject = yes", so that
#       $smtpd_helo_restrictions is evaluated at the time of the RCPT TO com-
#       mand.
smtpd_helo_restrictions = reject_invalid_helo_hostname,
    check_helo_access hash:/etc/postfix/heloaccess, permit

# smtpd_sender_restrictions (default: empty)
#   Optional restrictions  that the Postfix SMTP server  applies in the context
#   of a client MAIL FROM command.  See "SMTPD_ACCESS_README", section "Delayed
#   evaluation of SMTP access restriction lists" for a discussion of evaluation
#   context and time.
#
#   The default is to permit everything.
#
#   The following restrictions are specific to the sender address received with
#   the MAIL FROM command.
#
#   - check_sender_access type:table
#       Search the specified access(5) database for the MAIL FROM address, do-
#       main, parent domains, or localpart@, and execute the corresponding ac-
#       tion.
#
#   - check_sender_a_access type:table
#       Search the specified access(5) database for the IP addresses for the
#       MAIL FROM domain, and execute the corresponding action. Note: a result
#       of "OK" is not allowed for safety reasons. Instead, use DUNNO in order
#       to exclude specific hosts from blacklists. This feature is available in
#       Postfix 3.0 and later.
#
#   - check_sender_mx_access type:table
#       Search the specified access(5) database for the MX hosts for the MAIL
#       FROM domain, and execute the corresponding action. Note: a result of
#       "OK" is not allowed for safety reasons. Instead, use DUNNO in order to
#       exclude specific hosts from blacklists. This feature is available in
#       Postfix 2.1 and later.
#
#   - check_sender_ns_access type:table
#       Search the specified access(5) database for the DNS servers for the
#       MAIL FROM domain, and execute the corresponding action. Note: a result
#       of "OK" is not allowed for safety reasons. Instead, use DUNNO in order
#       to exclude specific hosts from blacklists. This feature is available in
#       Postfix 2.1 and later.
#
#   - reject_authenticated_sender_login_mismatch
#       Enforces the reject_sender_login_mismatch restriction for authenticated
#       clients only. This feature is available in Postfix version 2.1 and lat-
#       er.
#
#   - reject_known_sender_login_mismatch
#       Apply the reject_sender_login_mismatch restriction only to MAIL FROM
#       addresses that are known in $smtpd_sender_login_maps. This feature is
#       available in Postfix version 2.11 and later.
#
#   - reject_non_fqdn_sender
#       Reject the request when the MAIL FROM address specifies a domain that
#       is not in fully-qualified domain form as required by the RFC.
#
#       The non_fqdn_reject_code parameter specifies the response code for re-
#       jected requests (default: 504).
#
#   - reject_rhsbl_sender rbl_domain=d.d.d.d
#       Reject the request when the MAIL FROM domain is listed with the A rec-
#       ord "d.d.d.d" under rbl_domain (Postfix version 2.1 and later only).
#       Each "d" is a number, or a pattern inside "[]" that contains one or
#       more ";"-separated numbers or number..number ranges (Postfix version
#       2.8 and later). If no "=d.d.d.d" is specified, reject the request when
#       the MAIL FROM domain is listed with any A record under rbl_domain. 
#
#       The maps_rbl_reject_code parameter specifies the response code for re-
#       jected requests (default: 554); the default_rbl_reply parameter speci-
#       fies the default server reply; and the rbl_reply_maps parameter speci-
#       fies tables with server replies indexed by rbl_domain. This feature is
#       available in Postfix 2.0 and later.
#
#   - reject_sender_login_mismatch
#       Reject the request when $smtpd_sender_login_maps specifies an owner for
#       the MAIL FROM address, but the client is not (SASL) logged in as that
#       MAIL FROM address owner; or when the client is (SASL) logged in, but
#       the client login name doesn't own the MAIL FROM address according to
#       $smtpd_sender_login_maps.
#
#   - reject_unauthenticated_sender_login_mismatch
#       Enforces the reject_sender_login_mismatch restriction for unauthenti-
#       cated clients only. This feature is available in Postfix version 2.1
#       and later.
#
#   - reject_unknown_sender_domain
#       Reject the request when Postfix is not final destination for the sender
#       address, and the MAIL FROM domain has 1) no DNS MX and no DNS A record,
#       or 2) a malformed MX record such as a record with a zero-length MX
#       hostname (Postfix version 2.3 and later). 
#
#       The reply is specified with the unknown_address_reject_code parameter
#       (default: 450), unknown_address_tempfail_action (default:
#       defer_if_permit), or 550 (nullmx, Postfix 3.0 and later). See the re-
#       spective parameter descriptions for details.
#
#   - reject_unlisted_sender
#       Reject the request when the MAIL FROM address is not listed in the list
#       of valid recipients for its domain class. See the
#       smtpd_reject_unlisted_sender parameter description for details. This
#       feature is available in Postfix 2.1 and later.
#
#   - reject_unverified_sender
#       Reject the request when mail to the MAIL FROM address is known to
#       bounce, or when the sender address destination is not reachable. Ad-
#       dress verification information is managed by the verify(8) server; see
#       the ADDRESS_VERIFICATION_README file for details. 
#
#       - The unverified_sender_reject_code parameter specifies the numerical
#         response code when an address is known to bounce (default: 450,
#         change into 550 when you are confident that it is safe to do so). 
#
#       - The unverified_sender_defer_code specifies the numerical response
#         code when an address probe failed due to a temporary problem
#         (default: 450). 
#
#       - The unverified_sender_tempfail_action parameter specifies the action
#         after address probe failure due to a temporary problem (default:
#         defer_if_permit).
#
#       - This feature breaks for aliased addresses with
#         "enable_original_recipient = no" (Postfix <= 3.2). 
#
#       This feature is available in Postfix 2.1 and later.
#
#   Other restrictions that are valid in this context:
#     - Generic restrictions that can be used in any SMTP command context,
#       described under smtpd_client_restrictions.
#     - SMTP command specific restrictions described under
#       smtpd_client_restrictions and smtpd_helo_restrictions.
#     - SMTP command specific restrictions described under
#       smtpd_recipient_restrictions. When recipient restrictions are listed
#       under smtpd_sender_restrictions, they have effect only with
#       "smtpd_delay_reject = yes", so that $smtpd_sender_restrictions is eval-
#        uated at the time of the RCPT TO command.
smtpd_sender_restrictions = reject_non_fqdn_sender, reject_unknown_sender_domain,
    check_sender_access hash:/etc/postfix/mailaccess, permit

# smtpd_sender_login_maps (default: empty)
#   Optional lookup table with the "SASL" login names that own the sender (MAIL
#   FROM) addresses.  Specify zero or more "type:name" lookup tables, separated
#   by whitespace or comma.  Tables will be searched in the specified order un-
#   til a match is found. With lookups from indexed files such as DB or DBM, or
#   from networked tables such as NIS, LDAP or SQL, the following search opera-
#   tions are done with a sender address of user@domain:
#
#     1. user@domain
#           This table lookup is always done and has the highest precedence.
#
#     2. user
#           This table lookup is done only when the domain part of the sender
#           address matches "$myorigin", "$mydestination", "$inet_interfaces"
#           or "$proxy_interfaces".
#
#     3. @domain
#           This table lookup is done last and has the lowest precedence.
#
#   In all cases the result of  table lookup  must be either  "not found"  or a
#   list of SASL login names separated by comma and/or whitespace.
smtpd_sender_login_maps = hash:/etc/postfix/loginsenders

# smtpd_recipient_restrictions (default: see "postconf -d" output)
#   Optional restrictions  that the Postfix SMTP server applies  in the context
#   of a client SMTP "RCPT TO"  command, after "smtpd_relay_restrictions".  See
#   "SMTPD_ACCESS_README",  section "Delayed evaluation of SMTP access restric-
#   tion lists" for a discussion of evaluation context and time.
#
#   With Postfix versions before 2.10,  the rules for relay permission and spam
#   blocking were combined  under "smtpd_recipient_restrictions",  resulting in
#   error-prone configuration.  As of Postfix 2.10,  relay permission rules are
#   preferably implemented with smtpd_relay_restrictions,  so that a permissive
#   spam blocking policy  under smtpd_recipient_restrictions will no longer re-
#   sult in a permissive mail relay policy.
#
#   IMPORTANT: Either the smtpd_relay_restrictions or the
#              smtpd_recipient_restrictions parameter must specify at least one
#              of the following restrictions. Otherwise Postfix will refuse to
#              receive mail:
#
#                - reject: reject_unauth_destination
#                - defer:  defer_if_permit, defer_unauth_destination
#
#   The following restrictions  are specific to  the recipient address  that is
#   received with the RCPT TO command.
#
#   - check_recipient_access type:table
#       Search the specified access(5) database for the resolved RCPT TO ad-
#       dress, domain, parent domains, or localpart@, and execute the corre-
#       sponding action.
#
#   - check_recipient_a_access type:table
#       Search the specified access(5) database for the IP addresses for the
#       RCPT TO domain, and execute the corresponding action. Note: a result of
#       "OK" is not allowed for safety reasons. Instead, use DUNNO in order to
#       exclude specific hosts from blacklists. This feature is available in
#       Postfix 3.0 and later.
#
#   - check_recipient_mx_access type:table
#       Search the specified access(5) database for the MX hosts for the RCPT
#       TO domain, and execute the corresponding action. Note: a result of "OK"
#       is not allowed for safety reasons. Instead, use DUNNO in order to ex-
#       clude specific hosts from blacklists. This feature is available in
#       Postfix 2.1 and later.
#
#   - check_recipient_ns_access type:table
#       Search the specified access(5) database for the DNS servers for the
#       RCPT TO domain, and execute the corresponding action. Note: a result of
#       "OK" is not allowed for safety reasons. Instead, use DUNNO in order to
#       exclude specific hosts from blacklists. This feature is available in
#       Postfix 2.1 and later.
#
#   - permit_auth_destination
#       Permit the request when one of the following is true:
#         - Postfix is mail forwarder: the resolved RCPT TO domain matches
#           $relay_domains or a subdomain thereof, and the address contains no
#           sender-specified routing (user@elsewhere@domain),
#         - Postfix is the final destination: the resolved RCPT TO domain
#           matches $mydestination, $inet_interfaces, $proxy_interfaces,
#           $virtual_alias_domains, or $virtual_mailbox_domains, and the ad-
#           dress contains no sender-specified routing (user@elsewhere@domain).
#
#   - permit_mx_backup
#       Permit the request when the local mail system is backup MX for the RCPT
#       TO domain, or when the domain is an authorized destination (see
#       permit_auth_destination for definition).
#         - Safety: permit_mx_backup does not accept addresses that have
#                   sender-specified routing information (example:
#                   user@elsewhere@domain).
#         - Safety: permit_mx_backup can be vulnerable to mis-use when access
#                   is not restricted with permit_mx_backup_networks.
#         - Safety: as of Postfix version 2.3, permit_mx_backup no longer ac-
#                   cepts the address when the local mail system is primary MX
#                   for the recipient domain.
#                   Exception: permit_mx_backup accepts the address when it
#                              specifies an authorized destination (see
#                              permit_auth_destination for definition).
#         - Limitation: mail may be rejected in case of a temporary DNS lookup
#                       problem with Postfix prior to version 2.0.
#
#   - reject_non_fqdn_recipient
#       Reject the request when the RCPT TO address specifies a domain that is
#       not in fully-qualified domain form, as required by the RFC. 
#       The non_fqdn_reject_code parameter specifies the response code for re-
#       jected requests (default: 504).
#
#   - reject_rhsbl_recipient rbl_domain=d.d.d.d
#       Reject the request when the RCPT TO domain is listed with the A record
#       "d.d.d.d" under rbl_domain (Postfix version 2.1 and later only). Each
#       "d" is a number, or a pattern inside "[]" that contains one or more
#       ";"-separated numbers or number..number ranges (Postfix version 2.8 and
#       later). If no "=d.d.d.d" is specified, reject the request when the RCPT
#       TO domain is listed with any A record under rbl_domain. 
#       The maps_rbl_reject_code parameter specifies the response code for re-
#       jected requests (default: 554); the default_rbl_reply parameter speci-
#       fies the default server reply; and the rbl_reply_maps parameter speci-
#       fies tables with server replies indexed by rbl_domain. This feature is
#       available in Postfix version 2.0 and later.
#
#   - reject_unauth_destination
#       Reject the request unless one of the following is true:
#         - Postfix is mail forwarder: the resolved RCPT TO domain matches
#           $relay_domains or a subdomain thereof, and contains no sender-
#           specified routing (user@elsewhere@domain),
#         - Postfix is the final destination: the resolved RCPT TO domain
#           matches $mydestination, $inet_interfaces, $proxy_interfaces,
#           $virtual_alias_domains, or $virtual_mailbox_domains, and contains
#           no sender-specified routing (user@elsewhere@domain).
#
#       The relay_domains_reject_code parameter specifies the response code for
#       rejected requests (default: 554).
#
#   - defer_unauth_destination
#       Reject the same requests as reject_unauth_destination, with a non-
#       permanent error code. This feature is available in Postfix 2.10 and
#       later.
#
#   - reject_unknown_recipient_domain
#       Reject the request when Postfix is not final destination for the recip-
#       ient domain, and the RCPT TO domain has 1) no DNS MX and no DNS A rec-
#       ord or 2) a malformed MX record such as a record with a zero-length MX
#       hostname (Postfix version 2.3 and later).
#       The reply is specified with the unknown_address_reject_code parameter
#       (default: 450), unknown_address_tempfail_action (default:
#       defer_if_permit), or 556 (nullmx, Postfix 3.0 and later). See the re-
#       spective parameter descriptions for details.
#
#   - reject_unlisted_recipient (with Postfix version 2.0: check_recipient_maps)
#       Reject the request when the RCPT TO address is not listed in the list
#       of valid recipients for its domain class.
#       See the smtpd_reject_unlisted_recipient parameter description for de-
#       tails. This feature is available in Postfix 2.1 and later.
#
#   - reject_unverified_recipient
#       Reject the request when mail to the RCPT TO address is known to bounce,
#       or when the recipient address destination is not reachable. Address
#       verification information is managed by the verify(8) server; see the
#       ADDRESS_VERIFICATION_README file for details.
#
#       The unverified_recipient_reject_code parameter specifies the numerical
#       response code when an address is known to bounce (default: 450, change
#       into 550 when you are confident that it is safe to do so). 
#
#       The unverified_recipient_defer_code parameter specifies the numerical
#       response code when an address probe failed due to a temporary problem
#       (default: 450). 
#
#       The unverified_recipient_tempfail_action parameter specifies the action
#       after address probe failure due to a temporary problem (default:
#       defer_if_permit). This feature breaks for aliased addresses with
#       "enable_original_recipient = no" (Postfix <= 3.2).  This feature is
#       available in Postfix 2.1 and later.
#
#   Other restrictions that are valid in this context:
#     - Generic restrictions that can be used in any SMTP command context,
#       described under smtpd_client_restrictions.
#     - SMTP command specific restrictions described under
#       smtpd_client_restrictions, smtpd_helo_restrictions and
#       smtpd_sender_restrictions.
smtpd_recipient_restrictions = permit_mynetworks, permit_inet_interfaces,
    reject_non_fqdn_recipient, reject_unknown_recipient_domain,
    check_recipient_access hash:/etc/postfix/rcptaccess

# smtpd_data_restrictions (default: empty)
#   Optional access restrictions  that the  Postfix SMTP server  applies in the
#   context of the SMTP DATA command. See SMTPD_ACCESS_README, section "Delayed
#   evaluation of SMTP access restriction lists" for a discussion of evaluation
#   context and time.
#
#   This feature is available in Postfix 2.0 and later.  The following restric-
#   tions are valid in this context:
#
#     - Generic restrictions that can be used in any SMTP command context,
#       described under smtpd_client_restrictions.
#     - SMTP command specific restrictions described under the followings:
#         - smtpd_client_restrictions,
#         - smtpd_helo_restrictions,
#         - smtpd_sender_restrictions OR
#         - smtpd_recipient_restrictions
#     - However, no recipient information is available in the case of multi-
#       recipient mail. Acting on only one recipient would be misleading,
#       because any decision will affect all recipients equally. Acting on all
#       recipients  would require a possibly very large amount of memory, and
#       would also be misleading for the
smtpd_data_restrictions =

# smtpd_end_of_data_restrictions (default: empty)
#   Optional  access restrictions  that the Postfix SMTP server  applies in the
#   context of the SMTP END-OF-DATA command. See "SMTPD_ACCESS_README", section
#   "Delayed evaluation of SMTP access restriction lists"  for a discussion  of
#   evaluation context and time.  This feature  is available in Postfix 2.2 and
#   later.  See smtpd_data_restrictions for details and limitations.
smtpd_end_of_data_restrictions =

# smtpd_command_filter (default: empty)
#   The "smtpd_command_filter" configuration parameter is a mechanism to trans-
#   form SMTP commands from remote SMTP clients.  This is a last-resort tool to
#   work around client  commands that break  interoperability with  the Postfix
#   SMTP server.  Other uses involve fault injection to test Postfix's handling
#   of invalid commands.
#
#   Specify the name of a  "type:table" lookup table.  The search string is the
#   SMTP command  as received from the remote SMTP client,  except that initial
#   whitespace and the trailing <CR><LF> are removed.  The result value is exe-
#   cuted by the Postfix SMTP server.
#
#   There is no need to use smtpd_command_filter for the following cases:
#
#     - Use "resolve_numeric_domain = yes" to accept "user@ipaddress".
#     - Postfix already accepts the correct form "user@[ipaddress]". Use
#       virtual_alias_maps or canonical_maps to translate these into domain
#       names if necessary.
#     - Use "strict_rfc821_envelopes = no" to accept
#       "RCPT TO:<User Name <user@example.com>>". Postfix will ignore the
#       "User Name" part and deliver to the <user@example.com> address.
#
#   This feature is available in Postfix 2.7.
smtpd_command_filter = pcre:/etc/postfix/re_smtpcommand

# smtpd_soft_error_limit (default: 10)
#   The number of errors a remote SMTP client is allowed to make without deliv-
#   ering mail before the Postfix SMTP server slows down all its responses.
#
#   With Postfix version 2.1 and later,  the Postfix SMTP server delays all re-
#   sponses by "$smtpd_error_sleep_time" seconds. With Postfix versions 2.0 and
#   earlier, the Postfix SMTP server delays all responses by (number of errors)
#   seconds.
smtpd_soft_error_limit = 8

# smtpd_error_sleep_time (default: 1s)
#   With Postfix version 2.1 and later:  the SMTP server response delay after a
#   client has made more than  "$smtpd_soft_error_limit" errors, and fewer than
#   $smtpd_hard_error_limit errors, without delivering mail.
smtpd_error_sleep_time = 1s

# smtpd_forbidden_commands (default: CONNECT, GET, POST)
#   List of commands  that cause the Postfix SMTP server  to immediately termi-
#   nate the session with a "221" code.  This can be used to disconnect clients
#   that obviously  attempt to  abuse the system.  In addition  to the commands
#   listed in this parameter,  commands that follow the "Label:" format of mes-
#   sage headers will also cause a disconnect.
#   This feature is available in Postfix 2.2 and later.
smtpd_forbidden_commands = CONNECT GET POST

# smtpd_junk_command_limit (default: normal: 100, overload: 1)
#   The number of junk SMTP commands  ("NOOP", "VRFY", "ETRN" or "RSET") that a
#   remote SMTP client can send before the Postfix SMTP server starts to incre-
#   ment the error counter with each junk SMTP command.  The junk command count
#   is reset after mail is delivered. See also the "smtpd_error_sleep_time" and
#   smtpd_soft_error_limit configuration parameters. Normally the default limit
#   is 100, but it changes under overload to just 1.  With Postfix 2.5 and ear-
#   lier, the SMTP server always allows up to 100 junk commands by default.
#smtpd_junk_command_limit = ${stress?1}${stress:100}


# TLS SMTPD TRANSPORT LAYER SECURITY
# -----------------------------------------------------------------------------
# smtpd_tls_protocols (default: !SSLv2, !SSLv3)
#   List of TLS protocols  that the Postfix SMTP server will exclude or include
#   with opportunistic TLS encryption. The default value is "!SSLv2,!SSLv3" for
#   Postfix releases after the middle of 2015,  empty for older releases allow-
#   ing all protocols to be used with opportunistic TLS. A non-empty value is a
#   list of protocol names separated by whitespace, commas or colons.
#
#   The supported protocol names are "SSLv2", "SSLv3" and "TLSv1",  and are not
#   case sensitive.
#
#   Note: As of OpenSSL 1.0.1 two new protocols are defined, "TLSv1.1" and
#         "TLSv1.2". The latest patch levels of Postfix >= 2.6, and all ver-
#         sions of Postfix >= 2.10 can disable support for "TLSv1.1" or
#         "TLSv1.2".
#
#   OpenSSL v1.1.1 introduces support for "TLSv1.3".  With Postfix >= 3.4, this
#   can be disabled, if need be, via "!TLSv1.3".
#
#   Example:
#       smtpd_tls_protocols = !SSLv2, !SSLv3
#
#   This feature is available in Postfix 2.6 and later.
#smtpd_tls_protocols = !SSLv2, !SSLv3

# smtpd_tls_security_level (default: empty)
#   The SMTP TLS security level  for the Postfix SMTP server;  when a non-empty
#   value is specified,  this overrides the obsolete parameters "smtpd_use_tls"
#   and "smtpd_enforce_tls".
#
#   This parameter is ignored with  "smtpd_tls_wrappermode = yes".  Specify one
#   of the following security levels:
#
#   - none
#       TLS will not be used.
#   - may
#       Opportunistic TLS: announce STARTTLS support to remote SMTP clients,
#       but do not require that clients use TLS encryption.
#   - encrypt
#       Mandatory TLS encryption: announce STARTTLS support to remote SMTP cli-
#       ents, and require that clients use TLS encryption. According to RFC2487
#       this MUST NOT be applied in case of a publicly-referenced SMTP server.
#       Instead, this option should be used only on dedicated servers.
#
#   Note 1: the "fingerprint", "verify" and "secure" levels are not supported
#           here. The Postfix SMTP server logs a warning and uses "encrypt" in-
#           stead. To verify remote SMTP client certificates, see TLS_README
#           for a discussion of the smtpd_tls_ask_ccert, smtpd_tls_req_ccert,
#           and permit_tls_clientcerts features.
#
#   Note 2: The parameter setting "smtpd_tls_security_level = encrypt" implies
#           "smtpd_tls_auth_only = yes".

#   Note 3: when invoked via "sendmail -bs", Postfix will never offer STARTTLS
#           due to insufficient privileges to access the server private key.
#           This is intended behavior.
#
#   This feature is available in Postfix 2.3 and later.
smtpd_tls_security_level = may

# smtpd_tls_wrappermode (default: no)
#   Run the Postfix SMTP server  in the non-standard "wrapper" mode, instead of
#   using the "STARTTLS" command. If you want to support this service, enable a
#   special port in master.cf,  and specify  "-o smtpd_tls_wrappermode=yes"  on
#   the SMTP server's command line.  Port 465 (smtps) was  once chosen for this
#   purpose. This feature is available in Postfix 2.2 and later.
smtpd_tls_wrappermode = no

# smtpd_tls_ask_ccert (default: no)
#   The "smtpd_tls_ask_ccert" configuration parameter asks a remote SMTP client
#   for a client certificate.  This information is needed for certificate based
#   mail relaying with, for example, the permit_tls_clientcerts feature.
#
#   Some clients such as Netscape will either  complain if no certificate is a-
#   vailable  (for the list of CAs in $smtpd_tls_CAfile) or will offer multiple
#   client certificates to choose from. This may be annoying, so this option is
#   "off" by default.
smtpd_tls_ask_ccert = no

# smtpd_tls_cert_file (default: empty)
#   File with the Postfix SMTP server RSA certificate in PEM format.  This file
#   may also contain the Postfix SMTP server private RSA key.
#
#   Public Internet MX hosts  without certificates  signed by a  "reputable" CA
#   must generate, and be prepared to present to most clients, a self-signed or
#   private-CA signed certificate.  The client will not be able to authenticate
#   the server,  but unless it is running Postfix version 2.3  or similar soft-
#   ware, it will still insist on a server certificate.
#
#   For servers that are not public Internet MX hosts, Postfix version 2.3 sup-
#   ports configurations with no certificates. This entails the use of just the
#   anonymous TLS ciphers, which are not supported by typical SMTP clients.
#
#   Since such clients will not, as a rule, fall back to plain text after a TLS
#   handshake failure, the server will be unable to receive email from TLS ena-
#   bled clients.
#
#   To avoid accidental  configurations with no certificates,  Postfix 2.3 ena-
#   bles certificate-less operation only when the administrator explicitly sets
#   "smtpd_tls_cert_file = none".  This ensures that new Postfix configurations
#   will not accidentally run with no certificates.
#
#   Both RSA and DSA certificates  are supported.  When both types are present,
#   the cipher used determines  which certificate will be presented to the cli-
#   ent. For Netscape and OpenSSL clients  without  special cipher choices  the
#   RSA certificate is preferred.
#
#   To enable a remote SMTP client  to verify the Postfix SMTP server  certifi-
#   cate, the issuing CA certificates must be made available to the client. You
#   should include  the required certificates  in the server certificate  file,
#   the server certificate first, then the issuing CA(s) (bottom-up order).
#
#   Example:
#     the certificate for "server.example.com" was issued by "intermediate CA"
#     which itself has a certificate of "root CA". Create the server.pem file
#     with "cat server_cert.pem intermediate_CA.pem root_CA.pem > server.pem".
#
#   If you also want to verify client certificates issued by these CAs, you can
#   add the CA certificates to the "smtpd_tls_CAfile",  in which case it is not
#   necessary to have them in the smtpd_tls_cert_file or smtpd_tls_dcert_file.
#
#   A certificate supplied here must be usable as an SSL server certificate and
#   hence pass the "openssl verify -purpose sslserver ..." test.
#
#   Example:
#       smtpd_tls_cert_file = /etc/postfix/server.pem
#smtpd_tls_cert_file = {{ postfix.tlscertdir }}/{{ postfix.mailconfig.myhostname }}/fullchain.pem

# smtpd_tls_key_file (default: $smtpd_tls_cert_file)
#   File with the Postfix SMTP server RSA private key in PEM format.  This file
#   may be combined with the Postfix SMTP server RSA certificate file specified
#   with $smtpd_tls_cert_file.
#
#   The private key must be accessible without a pass-phrase,  i.e. it must not
#   be encrypted.  File permissions should grant read-only access to the system
#   superuser account ("root"), and no access to anyone else.
#smtpd_tls_key_file = {{ postfix.tlscertdir }}/{{ postfix.mailconfig.myhostname }}/privkey.pem

# smtpd_tls_eccert_file (default: empty)
#   File with the Postfix SMTP server  "ECDSA" certificate  in PEM format. This
#   file may also contain the Postfix  SMTP server  private ECDSA key.  See the
#   discussion under smtpd_tls_cert_file for more details.
#
#   Example:
#       smtpd_tls_eccert_file = /etc/postfix/ecdsa-scert.pem
#
#   This feature is available in Postfix version 2.6 and later, when Postfix is
#   compiled and linked with OpenSSL 1.0.0 or later.
#smtpd_tls_eccert_file =

# smtpd_tls_eckey_file (default: $smtpd_tls_eccert_file)
#   File with the Postfix  SMTP server "ECDSA"  private key in PEM format. This
#   file may be combined with the Postfix SMTP server  "ECDSA" certificate file
#   specified with $smtpd_tls_eccert_file.
#
#   The private key must be accessible without a pass-phrase,  i.e. it must not
#   be encrypted.  File permissions should grant read-only access to the system
#   superuser account ("root"), and no access to anyone else.
#
#   This feature is available in Postfix version 2.6 and later, when Postfix is
#   compiled and linked with OpenSSL 1.0.0 or later.
#smtpd_tls_eckey_file =

# smtpd_tls_CAfile (default: empty)
#   A file containing (PEM format) CA certificates  of root CAs trusted to sign
#   either remote  SMTP client  certificates  or intermediate CA  certificates.
#   These are loaded into memory before the "smtpd(8)" server enters the chroot
#   jail. 
#
#   If the number of trusted roots is large,  consider using "smtpd_tls_CApath"
#   instead,  but note that the latter directory  must be present in the chroot
#   jail if the smtpd(8) server is chrooted. This file may also be used to aug-
#   ment the server certificate trust chain,  but it is best to include all the
#   required certificates directly in the server certificate file.
#
#   Specify "smtpd_tls_CAfile = /path/to/system_CA_file" to use "ONLY" the sys-
#   tem-supplied default Certification Authority certificates.
#
#   Specify "tls_append_default_CA = no" to prevent Postfix  from appending the
#   system-supplied default CAs and trusting third-party certificates.
#
#   By default (see smtpd_tls_ask_ccert parameter), client certificates are not
#   requested, and smtpd_tls_CAfile should remain empty.  If you do make use of
#   client certificates, the distinguished names (DNs) of the Certification Au-
#   thorities listed in smtpd_tls_CAfile  are sent to the remote SMTP client in
#   the client certificate request message.  MUAs with multiple client certifi-
#   cates may use the list of preferred Certification Authorities to select the
#   correct client certificate.  You may want to put your "preferred" CA or CAs
#   in this file, and install other trusted CAs in $smtpd_tls_CApath.
#
#   Example:
#       smtpd_tls_CAfile = /etc/postfix/CAcert.pem
#
#   This feature is available in Postfix 2.2 and later.
smtpd_tls_CAfile = /etc/pki/ca-trust/extracted/openssl/ca-bundle.trust.crt

# smtpd_tls_CApath (default: empty)
#   A directory name containing (PEM format) CA certificates of root CAs trust-
#   ed to sign  either remote SMTP client certificates  or intermediate CA cer-
#   tifcates. Do not forget to create the necessary "hash" links with, for exam-
#   ple, "$OPENSSL_HOME/bin/c_rehash /etc/postfix/certs".
#
#   To use smtpd_tls_CApath in chroot mode,  this directory (or a copy) must be
#   inside the chroot jail.
#
#   Specify "smtpd_tls_CApath = /path/to/system_CA_directory" to use "ONLY" the
#   system-supplied default Certification Authority certificates.
#
#   Specify "tls_append_default_CA = no" to prevent Postfix  from appending the
#   system-supplied default CAs and trusting third-party certificates.
#
#   By default (see smtpd_tls_ask_ccert parameter), client certificates are not
#   requested,  and smtpd_tls_CApath parameter should remain empty. In contrast
#   to "smtpd_tls_CAfile" parameter, DNs of Certification Authorities installed
#   in smtpd_tls_CApath are not included in the client certificate request mes-
#   sage.  MUAs with multiple client certificates may use the list of preferred
#   Certification Authorities to select the correct client certificate. You may
#   want to put your  "preferred" CA or CAs  in smtpd_tls_CAfile parameter, and
#   install the remaining trusted CAs in $smtpd_tls_CApath.
#
#   Example:
#       smtpd_tls_CApath = /etc/postfix/certs
#
#   This feature is available in Postfix 2.2 and later.
smtpd_tls_CApath = /etc/pki/ca-trust/extracted/openssl

# smtpd_tls_dh1024_param_file (default: empty)
#   File with "DH parameters" that the Postfix SMTP server should use with non-
#   export EDH ciphers.  Instead of using the exact same parameter sets as dis-
#   tributed with other TLS packages,  it is more secure  to generate  your own
#   set of parameters with something like the following commands:
#
#       openssl dhparam -out /etc/postfix/dh512.pem 512
#       openssl dhparam -out /etc/postfix/dh1024.pem 1024
#       openssl dhparam -out /etc/postfix/dh2048.pem 2048
#
#   It is safe to share  the same "DH parameters" between  multiple Postfix in-
#   stances.  If you prefer,  you can generate separate parameters for each in-
#   stance.
#
#   If you want to take maximal advantage of ciphers that offer forward secrecy
#   see the Getting started section of "FORWARD_SECRECY_README". The full docu-
#   ment conveniently presents all information  about Postfix "perfect" forward
#   secrecy support  in one place:  what forward secrecy is,  how to tweak set-
#   tings,  and what you can expect to see  when Postfix uses ciphers with for-
#   ward secrecy.
#
#   Example:
#       smtpd_tls_dh1024_param_file = /etc/postfix/dh2048.pem
#
#   This feature is available with Postfix version 2.2.
smtpd_tls_dh1024_param_file =

# smtpd_tls_session_cache_database (default: empty)
#   The "smtpd_tls_session_cache_database" parameter is a name of the file con-
#   taining the optional Postfix SMTP server TLS session cache. Specify a data-
#   base type that supports enumeration, such as "btree" or "sdbm"; there is no
#   need to support concurrent access. The file is created if it doesn't exist.
#   The smtpd(8) daemon does not use this parameter directly,  rather the cache
#   is implemented indirectly in the tlsmgr(8) daemon.
#   This means that per-smtpd-instance master.cf file  overrides of this param-
#   eter are not effective. Note, that each of the cache databases supported by
#   tlsmgr(8) daemon:
#       - $smtpd_tls_session_cache_database
#       - $smtp_tls_session_cache_database
#           (and with Postfix 2.3 and later $lmtp_tls_session_cache_database),
#   needs to be stored separately. It isn't at this time possible to store mul-
#   tiple caches in a single database.
#
#   Note: dbm databases are not suitable. TLS session objects are too large.
#
#   As of version 2.5, Postfix no longer uses root privileges when opening this
#   file. The file should now be stored under the Postfix-owned data_directory.
#   As a migration aid,  an attempt to open the file under a non-Postfix direc-
#   tory is redirected to the Postfix-owned "data_directory",  and a warning is
#   logged.
#
#   As of Postfix version 2.11  the preferred mechanism for  session resumption
#   is  RFC 5077 TLS session tickets,  which don't require server-side storage.
#   Consequently,  for Postfix >= 2.11 this parameter  should generally be left
#   empty. TLS session tickets require  an OpenSSL (at least v0.9.8h) that pro-
#   vides full support for this TLS extension.
smtpd_tls_session_cache_database =


# INPUT RATE CONTROL
# -----------------------------------------------------------------------------
# in_flow_delay (default: 1s)
#   The "in_flow_delay" configuration parameter implements mail input flow con-
#   trol. This feature is turned on by default, although it still needs further
#   development (it's disabled on SCO UNIX due to an SCO bug).
#
#   A Postfix process will pause for "in_flow_delay" seconds before accepting a
#   new message,  when the message  arrival rate  exceeds the  message delivery
#   rate. With the default 100 SMTP server process limit,  this limits the mail
#   inflow to 100 messages a second  more than the number of messages delivered
#   per second. Specify 0 to disable the feature. Valid delays are 0..10.
in_flow_delay = 0s

# smtpd_client_connection_count_limit (default: 50)
#   How many simultaneous  connections any client  is allowed  to make  to this
#   service.  By default,  the limit is  set to half  the default process limit
#   value. To disable this feature, specify a limit of 0.
#
#   WARNING: The purpose of this feature is to limit abuse. It must not be used
#   to regulate legitimate mail traffic.
#
#   This feature is available in Postfix 2.2 and later.
smtpd_client_connection_count_limit = 50

# smtpd_client_connection_rate_limit (default: 0)
#   The "smtpd_client_connection_rate_limit" parameter is the maximal number of
#   connection attempts any client  is allowed to make to this service per time
#   unit.  By default,  a client can make as  many connections per time unit as
#   Postfix can accept. To disable this feature, specify a limit of 0.
#
#   WARNING: The purpose of this feature is to limit abuse. It must not be used
#            to regulate legitimate mail traffic.
#
#   This feature is available in Postfix 2.2 and later.
smtpd_client_connection_rate_limit = 0

# smtpd_client_event_limit_exceptions (default: $mynetworks)
#   Clients that are excluded from "smtpd_client_*_count / rate_limit" restric-
#   tions. See the "mynetworks" configuration parameter description for the pa-
#   rameter value syntax. By default, clients in trusted networks are excluded.
#   Specify a list of network blocks, hostnames or ".domain" names (the initial
#   dot causes the domain to match any name below it).
#
#   Note: IP version 6 address information must be specified inside [] in the
#         smtpd_client_event_limit_exceptions value, and in files specified
#         with "/file/name". IP version 6 addresses contain the ":" character,
#         and would otherwise be confused with a "type:table" pattern.
#
#   Pattern matching of domain names  is controlled by the presence  or absence
#   of "smtpd_client_event_limit_exceptions" parameter in the
#   parent_domain_matches_subdomains parameter value (postfix 3.0 and later).
#
#   This feature is available in Postfix 2.2 and later.
# smtpd_client_event_limit_exceptions = ${smtpd_client_connection_limit_exceptions:$mynetworks}

# smtpd_client_message_rate_limit (default: 0)
#   The "smtpd_client_message_rate_limit" is  the maximal number of message de-
#   livery requests that any client is allowed to make to this service per time
#   unit, regardless of whether or not Postfix actually accepts those messages.
#
#   By default, a client can send as many message delivery requests per time u-
#   nit as Postfix can accept. To disable this feature, specify a limit of 0.
#
#   WARNING: The purpose of this feature is to limit abuse. It must not be used
#            to regulate legitimate mail traffic.
#
#   This feature is available in Postfix 2.2 and later.
smtpd_client_message_rate_limit = 0

# smtpd_client_recipient_rate_limit (default: 0)
#   The "smtpd_client_recipient_rate_limit" parameter  is the maximal number of
#   recipient addresses  that any client is allowed to send to this service per
#   time unit,  regardless of whether or not Postfix actually accepts those re-
#   cipients.
#
#   The time unit is specified  with the anvil_rate_time_unit configuration pa-
#   rameter. By default, a client can send as many recipient addresses per time
#   unit as Postfix can accept. To disable this feature, specify a limit of 0.
#
#   WARNING: The purpose of this feature is to limit abuse. It must not be used
#            to regulate legitimate mail traffic.
#
#   This feature is available in Postfix 2.2 and later.
smtpd_client_recipient_rate_limit = 0


# TRUST AND RELAY CONTROL
# -----------------------------------------------------------------------------
# mynetworks_style (default: Postfix >= 3.0: host, Postfix < 3.0: subnet)
#   The mynetworks parameter specifies  the list of "trusted" SMTP clients that
#   have more privileges than "strangers".  In particular,  "trusted" SMTP cli-
#   ents are allowed to relay mail through Postfix.
#   See the smtpd_recipient_restrictions parameter in postconf(5).
#
#   You can specify the list of "trusted" network addresses  by hand or you can
#   let Postfix do it for you (which is the default).
#
#   By default ("mynetworks_style" = "subnet"),  Postfix "trusts"  SMTP clients
#   in the same IP subnetworks as the local machine.  On Linux, this does works
#   correctly only with interfaces specified with the "ifconfig" command.
#
#   Specify "mynetworks_style = class" when Postfix should "trust" SMTP clients
#   in the same IP class "A/B/C" networks  as the local machine.  Don't do this
#   with a dialup site -- it would cause Postfix to "trust" your entire provid-
#   er's network.  Instead, specify an explicit mynetworks list by hand, as de-
#   scribed below.
#
#   Specify "mynetworks_style = host"  when Postfix should "trust" only the lo-
#   cal machine.
mynetworks_style = host

# mynetworks (default: see "postconf -d" output)
#   Alternatively, you can specify the "mynetworks" list by hand, in which case
#   Postfix ignores the "mynetworks_style" setting.
#
#   Specify an explicit list of network/netmask patterns,  where the mask spec-
#   ifies the number of bits in the network part of a host address.
#
#   You can  also specify  the absolute  pathname of a pattern file  instead of
#   listing the patterns here.  Specify type:table for table-based lookups (the
#   value on the table right-hand side is not used).
mynetworks = cidr:/etc/postfix/mynetworks

# relay_domains (default: Postfix >= 3.0: empty, Postfix < 3.0: $mydestination)
#   The "relay_domains" parameter restricts  what destinations this system will
#   relay mail to. See the "smtpd_recipient_restrictions" parameter description
#   in postconf(5) for detailed information.
#
#   By default, Postfix relays mail
#     - from "trusted" clients (IP address matches $mynetworks) to any destina-
#       tion,
#     - from "untrusted" clients to destinations that match "$relay_domains"
#       or subdomains thereof, except addresses with sender-specified routing.
#
#   The default relay_domains value is $mydestination.
# 
#   In addition to the above, the Postfix SMTP server by default accepts mail
#   that Postfix is final destination for:
#     - destinations that match $inet_interfaces or $proxy_interfaces,
#     - destinations that match $mydestination
#     - destinations that match $virtual_alias_domains,
#     - destinations that match $virtual_mailbox_domains.
#
#   These destinations do not need to be listed in $relay_domains.
#
#   NOTE: Postfix will not automatically forward mail for domains that
#         list this system as their primary or backup MX host. See the
#         permit_mx_backup restriction description in postconf(5).
relay_domains =

# relayhost (default: empty)
#   The relayhost parameter specifies  the default host to send mail to when no
#   entry is matched  in the optional transport(5) table.  When no relayhost is
#   given, mail is routed directly to the destination.
#
#   On an intranet,  specify the organizational  domain name.  If your internal
#   DNS uses "no MX records", specify the name of the intranet gateway host in-
#   stead. In the case of SMTP, specify a domain, host, host:port, [host]:port,
#   [address] or [address]:port; the form [host] turns off MX lookups.
#
#relayhost = $mydomain
#relayhost = [gateway.my.domain]
#relayhost = [mailserver.isp.tld]
#relayhost = uucphost
#relayhost = [an.ip.add.ress]


# REJECTING
# -----------------------------------------------------------------------------
# smtpd_reject_footer (default: empty)
#   Optional information that is appended after each Postfix SMTP server 4XX or
#   5XX response.
#
#   The following example uses "\c" at the start of the template  (supported in
#   Postfix 2.10 and later)  to suppress the line break  between the reply text
#   and the footer text.  With earlier Postfix versions, the footer text always
#   begins on a new line, and the "\c" is output literally.
#
#   /etc/postfix/main.cf:
#       smtpd_reject_footer = \c. For assistance, call 800-555-0101. Please
#           provide the following information in your problem report: time
#           ($localtime), client ($client_address) and server ($server_name).
#
#   Server response:
#       550-5.5.1 <user@example> Recipient address rejected: User unknown. For
#       assistance, call 800-555-0101. Please provide the following information
#       in your problem report: time (Jan 4 15:42:00), client (192.168.1.248)
#       and server (mail1.example.com).
#
#   Note: the above text is meant to make it easier to find the Postfix logfile
#         records for a failed SMTP session.  The text itself is not logged to
#         the Postfix SMTP server's maillog file.
#
#   Be sure to keep  the text as short as possible.  Long text may be truncated
#   before it is logged to the remote SMTP client's maillog file,  or before it
#   is returned to the sender in a delivery status notification.
#
#   The template text is not subject to Postfix configuration parameter "$name"
#   expansion. Instead, this feature supports a limited number of $name attrib-
#   utes in the footer text.  These attributes are replaced  with their current
#   value for the SMTP session.
#
#   Note: specify $$name in footer text that is looked up from regexp: or
#         pcre:-based smtpd_reject_footer_maps, otherwise the Postfix server
#         will not use the footer text and will log a warning instead.
#
#   - client_address: The Client IP address that is logged in the maillog file.
#   - client_port:    The client TCP port that is logged in the maillog file.
#   - localtime:      The server local time (Mmm dd hh:mm:ss) that is logged in
#                     the maillog file.
#   - server_name:    The server's myhostname value. This attribute is made a-
#                     vailable for sites with multiple MTAs (perhaps behind a 
#                     load-balancer), where the server name can help the server
#                     support team to quickly find the right log files.
#
#   Notes:
#     - NOT SUPPORTED are other attributes such as sender, recipient,
#       or main.cf parameters.
#     - For safety reasons, text that does not match $smtpd_expansion_filter
#       is censored.
#
#   This feature supports the two-character sequence \n as a request for a line
#   break in  the footer text.  Postfix automatically inserts  after  each line
#   break the "three-digit" SMTP reply code (and optional enhanced status code)
#   from the original Postfix reject message.
#
#   To work around email software  that mis-handles multi-line replies, specify
#   the two-character sequence \c at the start of the template. This suppresses
#   the line break between the reply text and the footer text (Postfix 2.10 and
#   later). This feature is available in Postfix 2.8 and later.
smtpd_reject_footer =

# relay_recipient_maps (default: empty)
#   The "relay_recipient_maps" parameter specifies  optional lookup tables with
#   all addresses in the domains that match $relay_domains.
#
#   If this parameter is defined, then the SMTP server will reject mail for un-
#   known relay users.  This feature is off by default.  The right-hand side of
#   the lookup tables is conveniently ignored.  In the left-hand side,  specify
#   an @domain.tld wild-card, or specify a user@domain.tld address.
#
#relay_recipient_maps = hash:/etc/postfix/relay_recipients

# local_recipient_maps (default: proxy:unix:passwd.byname $alias_maps)
#   The "local_recipient_maps" specifies  optional lookup tables with all names
#   or addresses of users  that are local with respect to the following parame-
#   ters: $mydestination, $inet_interfaces or $proxy_interfaces.
#
#   If this parameter is defined, then the SMTP server will reject mail for un-
#   known local users.  This parameter is defined by default. To turn off local
#   recipient checking in the SMTP server, specify local_recipient_maps = (i.e.
#   empty).
#
#   The default setting assumes that you use the default Postfix local delivery
#   agent for local delivery.  You need to update the local_recipient_maps set-
#   ting if:
#
#     - You define $mydestination domain recipients in files other than
#       /etc/passwd, /etc/aliases, or the $virtual_alias_maps files.
#       For example, you define $mydestination domain recipients in the
#       $virtual_mailbox_maps files.
#     - You redefine the local delivery agent in master.cf.
#     - You redefine the "local_transport" setting in main.cf.
#     - You use the "luser_relay", "mailbox_transport", or "fallback_transport"
#       feature of the Postfix local delivery agent (see local(8)).
#
#   Details are described in the LOCAL_RECIPIENT_README file.
#
#   Beware: if the Postfix SMTP server runs chrooted,  you probably have to ac-
#   cess the passwd file via the proxymap service,  in order to overcome chroot
#   restrictions. The alternative,  having a copy of the system passwd file in
#   the chroot jail is just not practical.
#
#   The right-hand side  of the lookup tables  is conveniently ignored.  In the
#   left-hand side, specify a bare username, an @domain.tld wild-card, or spec-
#   ify a user@domain.tld address.
# 
#local_recipient_maps = unix:passwd.byname $alias_maps
#local_recipient_maps = proxy:unix:passwd.byname $alias_maps
#local_recipient_maps =

# unknown_local_recipient_reject_code (default: 550)
#   The "unknown_local_recipient_reject_code" parameter specifies the SMTP ser-
#   ver response code  when a recipient domain matches  "mydestination" parame-
#   ter or "${proxy,inet}_interfaces" parameters, while "$local_recipient_maps"
#   is non-empty and the recipient address or address local-part is not found.
#
#   The default setting is 550 (reject mail)  but it is safer to start with 450
#   (try again later) until you are certain that your local_recipient_maps set-
#   tings are OK.
unknown_local_recipient_reject_code = 550


# LIMITS
# -----------------------------------------------------------------------------
# smtpd_recipient_limit (default: 1000)
#   The "smtpd_recipient_limit"  parameter is  the maximal number of recipients
#   that the Postfix SMTP server accepts per message delivery request.
smtpd_recipient_limit = 1000

# header_size_limit (default: 102400)
#   The "header_size_limit" parameter is  the maximal amount of memory in bytes
#   for storing a message header. If a header is larger, the excess is discard-
#   ed. The limit is enforced by the cleanup(8) server.
header_size_limit = 102400

# message_size_limit (default: 10240000)
#   The maximal size in bytes of a message, including envelope information.
#
#   Note: be careful when making changes.  Excessively small values will result
#         in the loss of non-delivery notifications, when a bounce message size
#         exceeds the local or remote MTA's message size limit.
message_size_limit = 33554432

# hopcount_limit (default: 50)
#   The maximal number of Received: message headers that is allowed in the pri-
#   mary message headers. A message that exceeds the limit is bounced, in order
#   to stop a mailer loop.
hopcount_limit = 50

# mailbox_size_limit (default: 51200000)
#   The maximal size of any local(8) individual mailbox or maildir file, or "0"
#   (no limit).  In fact, this limits  the size of any file  that is written to
#   upon local delivery,  including files written by external commands that are
#   executed by the local(8) delivery agent.
#   This limit must not be smaller than the message size limit.
mailbox_size_limit = 2147483647

# default_process_limit (default: 100)
#   The default maximal number of  Postfix child processes that provide a given
#   service. This limit can be overruled for specific services in the master.cf
#   file.
default_process_limit = 100

# SASL: SIMPLE AUTHENTICATION AND SECURITY LAYER
# -----------------------------------------------------------------------------
# smtpd_sasl_auth_enable (default: no)
#   SMTP servers  need to decide  whether an SMTP client  is authorized to send
#   mail to remote destinations, or only to destinations that the server itself
#   is responsible for. Usually, SMTP servers accept mail to remote destinations
#   when  the client's IP address  is in the "same network"  as the server's IP
#   address.
#
#   SMTP clients outside the SMTP server's network  need a different way to get
#   "same network" privileges. To address this need,  Postfix supports SASL au-
#   thentication (RFC 4954, formerly RFC 2554).  With this a remote SMTP client
#   can authenticate  to the Postfix  SMTP server,  and the Postfix SMTP client
#   can authenticate to a remote  SMTP server.  Once a client is authenticated,
#   a server can give it "same network" privileges.
#
#   Postfix does not implement SASL itself, but instead uses existing implemen-
#   tations as building blocks. This means that some SASL-related configuration
#   files will belong to Postfix, while other configuration files belong to the
#   specific "SASL" implementation that Postfix will use.  This document covers
#   both the Postfix and non-Postfix configuration.
#
#   NOTE: People who go to the trouble of installing Postfix may have the ex-
#         pectation that Postfix is more secure than some other mailers. The
#         Cyrus SASL library contains a lot of code. With this, Postfix becomes
#         as secure as other mail systems that use the Cyrus SASL library.
#         Dovecot provides an alternative that may be worth considering.
smtpd_sasl_auth_enable = no

# broken_sasl_auth_clients (default: no)
#   Enable interoperability with remote SMTP clients that implement an obsolete
#   version of the "AUTH" command (RFC 4954). Examples of such SMTP clients are
#   Microsoft Outlook Express version 4 and Microsoft Exchange version 5.0.
#
#   Specify  "broken_sasl_auth_clients = yes"  to have Postfix advertise "AUTH"
#   support in a non-standard way.
broken_sasl_auth_clients = yes

# smtpd_sasl_security_options (default: noanonymous)
#   Postfix SMTP server "SASL" security options;  as of Postfix version 2.3 the
#   list of available features depends on the "SASL" server implementation that
#   is selected with "smtpd_sasl_type".
#
#   The following security features  are defined  for the cyrus server SASL im-
#   plementation:
#
#   Restrict what authentication mechanisms  the Postfix SMTP server will offer
#   to the client.  The list of available  authentication mechanisms  is system
#   dependent.
#
#   Specify zero or more of the following:
#
#     - noplaintext:      Disallow methods that use plaintext passwords.
#     - noactive:         Disallow methods subject to active (non-dictionary)
#                         attack.
#     - nodictionary:     Disallow methods subject to passive (dictionary)
#                         attack.
#     - noanonymous:      Disallow methods that allow anonymous authentication.
#     - forward_secrecy:  Only allow methods that support forward secrecy
#                         (Dovecot only).
#     - mutual_auth:      Only allow methods that provide mutual authentication
#                         (not available with Cyrus SASL version 1).
#
#   By default, the Postfix SMTP server accepts plaintext passwords but not
#   anonymous logins.
#
#   Warning: it appears that clients try authentication methods in the order as
#            advertised by the server (e.g., PLAIN ANONYMOUS CRAM-MD5) which
#            means that if you disable plaintext passwords, clients will log in
#            anonymously, even when they should be able to use CRAM-MD5. So, if
#            you disable plaintext logins, disable anonymous logins too.
#            Postfix treats anonymous login as no authentication.
#smtpd_sasl_security_options = noanonymous

# smtpd_sasl_local_domain = $myhostname
#
# smtpd_client_auth_rate_limit (default: 0)
#   The maximal number of "AUTH" commands that any client is allowed to send to
#   this service per time unit,  regardless of whether or not  Postfix actually
#   accepts those commands.  By default, there is no limit on the number "AUTH"
#   commands that a client may send. 
#
#   To disable this feature, specify a limit of 0.
#
#   WARNING: The purpose of this feature is to limit abuse. It must not be used
#            to regulate legitimate mail traffic.
#
#   This feature is available in Postfix 3.1 and later.
#
# smtpd_client_auth_rate_limit = 0


# JUNK MAIL CONTROLS
# -----------------------------------------------------------------------------
# header_checks (default: empty)
#   The header_checks parameter specifies  an optional table with patterns that
#   each logical message header is matched against, including headers that span
#   multiple physical lines.
#
#   By default, these patterns also apply to MIME headers and to the headers of
#   attached messages.  With older Postfix versions,  MIME and attached message
#   headers were treated as body text. For details, see "man header_checks".
header_checks = pcre:/etc/postfix/re_emailheader

# body_checks (default: empty)
#   The "body_checks" parameter specifies an optional lookup tables for content
#   inspection as specified in the body_checks(5) manual page.
#
#   Note: with Postfix versions before 2.0, these rules inspect all content
#         after the primary message headers.
body_checks = pcre:/etc/postfix/re_messagebody

# body_checks_size_limit (default: 51200)
#   How much text in a message body segment(or attachment, if you prefer to use
#   that term) is subjected to "body_checks" inspection.  The amount of text is
#   limited to avoid scanning huge attachments.
#body_checks_size_limit = 51200


# MILTER
# -----------------------------------------------------------------------------
# smtpd_milters (default: empty)
#   A list of Milter (mail filter) applications  for new mail  that arrives via
#   the Postfix smtpd(8) server.  Specify space or comma as separator.  See the
#   "MILTER_README" document for details.  This feature is available in Postfix
#   2.3 and later.
smtpd_milters =

# smtpd_milter_maps (default: empty)
#   Lookup tables  with Milter settings  per remote SMTP client IP address. The
#   lookup result overrides the smtpd_milters setting, and has the same syntax.
#
#   Note: lookup tables cannot return empty responses. Specify a lookup result
#         of DISABLE (case does not matter) to indicate that Milter support
#         should be disabled.
#
#   This feature is available in Postfix 3.2 and later.
#smtpd_milter_maps = cidr:/etc/postfix/miltertable

# milter_protocol (default: 6)
#   The mail filter protocol version  and optional protocol extensions for com-
#   munication with a Milter application; prior to Postfix 2.6 the default pro-
#   tocol is 2.  Postfix sends this version number  during the initial protocol
#   handshake.  It should match the version number that is expected by the mail
#   filter application (or by its Milter library).
#
#   Protocol versions:
#     - 2: Use Sendmail 8 mail filter protocol version 2 (default with Sendmail
#          version 8.11 .. 8.13 and Postfix version 2.3 .. 2.5).
#     - 3: Use Sendmail 8 mail filter protocol version 3.
#     - 4: Use Sendmail 8 mail filter protocol version 4.
#     - 6: Use Sendmail 8 mail filter protocol version 6 (default with Sendmail
#          version 8.14 and Postfix version 2.6).
#
#   Protocol extensions:
#     - no_header_reply: Specify this when the Milter application will not re-
#       ply for each individual message header.
#
#   This feature is available in Postfix 2.3 and later.
milter_protocol = 6

# milter_default_action (default: tempfail)
#   The default action when a Milter (mail filter) application is unavailable
#   or mis-configured. Specify one of the following:
#     - accept: Proceed as if the mail filter was not present.
#     - reject: Reject all further commands in this session with a permanent
#               status code.
#     - tempfail: Reject all further commands in this session with a temporary
#                 status code.
#     - quarantine: Like "accept", but freeze the message in the "hold" queue.
#                   Available with Postfix 2.6 and later.
#
#   This feature is available in Postfix 2.3 and later.
milter_default_action = tempfail


# ADDRESS REWRITING
# -----------------------------------------------------------------------------
# alias_maps (default: see "postconf -d" output)
#   The ADDRESS_REWRITING_README document gives  information about address mas-
#   querading or other forms of address  rewriting including username -> First-
#   name.Lastname mapping.
#
#   ADDRESS REDIRECTION (VIRTUAL DOMAIN)
#     The VIRTUAL_README document gives information about the many forms of do-
#     main hosting that Postfix supports.
#
#   "USER HAS MOVED" BOUNCE MESSAGES
#     See the discussion in the ADDRESS_REWRITING_README document.
#
#   TRANSPORT MAP
#     See the discussion in the ADDRESS_REWRITING_README document.
#
#   ALIAS DATABASE
#     The "alias_maps" parameter specifies  the list of alias databases used by
#     the local delivery agent. The default list is system dependent.
#
#   On systems with "NIS",  the default is to search  the local alias database,
#   then the NIS alias database. See aliases(5) for syntax details.
#
#   If you change the alias database, run "postalias /etc/aliases" (or wherever
#   your system stores the mail alias file), or simply run "newaliases" command
#   to build  the necessary DBM or DB file.  It will take a minute or so before
#   changes become visible.  Use "postfix reload" to eliminate the delay.
alias_maps = hash:{{ postfix.configroot }}/aliases

# alias_database (default: see "postconf -d" output)
#   The alias_database parameter specifies the alias database(s) that are built
#   with "newaliases" or "sendmail -bi" command.  This is a separate configura-
#   tion parameter,  because alias_maps (see above) may specify tables that are
#   not necessarily all under control by Postfix.
alias_database = hash:{{ postfix.configroot }}/aliases

# allow_percent_hack (default: yes)
#   Enable the rewriting of the form "user%domain" to "user@domain".
#
#   Note: as of Postfix version 2.2, message header address
#         rewriting happens only when one of the following conditions is true:
#
#     - The message is received with the Postfix sendmail(1) command,
#     - The message is received from a network client that matches
#       $local_header_rewrite_clients,
#     - The message is received from the network, and the
#       remote_header_rewrite_domain parameter specifies a non-empty value.
allow_percent_hack = yes

# canonical_classes (default: envelope_sender, envelope_recipient, header_sender, header_recipient)
#   What addresses are subject to "canonical_maps" address mapping. By default,
#   canonical_maps address mapping  is applied to envelope sender and recipient
#   addresses, and to header sender and header recipient addresses. Specify one
#   or more of:
#       envelope_sender, envelope_recipient, header_sender, header_recipient
#   This feature is available in Postfix 2.2 and later.
canonical_classes = envelope_sender, envelope_recipient, header_sender, header_recipient

# canonical_maps (default: empty)
#   Optional address mapping  lookup tables  for message headers and envelopes.
#   The mapping is applied to both sender and recipient addresses,  in both en-
#   velopes and in headers, as controlled with the canonical_classes parameter.
#   This is typically  used to clean up  dirty addresses from  legacy mail sys-
#   tems, or to replace login names by Firstname.Lastname. The table format and
#   lookups are documented in canonical(5).  For an overview of Postfix address
#   manipulations see the ADDRESS_REWRITING_README document.
#
#   Note: with Postfix version 2.2, message header address mapping happens only
#         when message header address rewriting is enabled:
#
#     - The message is received with the Postfix sendmail(1) command,
#     - The message is received from a network client that matches
#       $local_header_rewrite_clients,
#     - The message is received from the network, and the
#       remote_header_rewrite_domain parameter specifies a non-empty value.
#canonical_maps = hash:/etc/postfix/canonical

# smtp_generic_maps (default: empty)
#   Optional lookup tables that  perform email address rewriting in the Postfix
#   SMTP client, typically to transform a locally valid address into a globally
#   valid email address  when sending mail across the Internet.  This is needed
#   when the local machine does not have its own Internet domain name, but uses
#   something like localdomain.local instead.
#
#   The table format and  lookups are documented in "generic(5)";  examples are
#   shown in the "ADDRESS_REWRITING_README" and "STANDARD_CONFIGURATION_README"
#   documents.
smtp_generic_maps = hash:/etc/postfix/generic

# relocated_maps (default: empty)
#   The "relocated_maps"  configuration parameter specifies an  optional lookup
#   tables with new contact information for users or domains that no longer ex-
#   ist.  The table format and  lookups of "relocated_maps" parameter are docu-
#   mented in relocated(5). 
relocated_maps = hash:/etc/postfix/relocated

# masquerade_domains (default: empty)
#   Optional list of domains  whose subdomain structure will be stripped off in
#   email addresses.  The list is processed left to right, and processing stops
#   at the first match. Thus,
#       masquerade_domains = foo.example.com example.com
#   strips "user@any.thing.foo.example.com" to "user@foo.example.com", but
#   strips "user@any.thing.else.example.com" to "user@example.com".
#
#   A domain name prefixed with "!" means do not masquerade  this domain or its
#   subdomains. Thus,
#       masquerade_domains = !foo.example.com example.com
#
#   does not change "user@any.thing.foo.example.com" or "user@foo.example.com",
#   but strips "user@any.thing.else.example.com" to "user@example.com".
#
#   Note: with Postfix version 2.2, message header address masquerading happens
#         only when message header address rewriting is enabled:
#     - The message is received with the Postfix sendmail(1) command,
#     - The message is received from a network client that matches
#       $local_header_rewrite_clients,
#     - The message is received from the network, and the
#       remote_header_rewrite_domain parameter specifies a non-empty value.
#
#   To get the behavior before Postfix version 2.2, specify
#       "local_header_rewrite_clients = static:all".
masquerade_domains =

# masquerade_exceptions (default: empty)
#   Optional list of user names that are not subjected to address masquerading,
#   even when their address matches "$masquerade_domains".  By default, address
#   masquerading makes no exceptions.
#
#   Specify a list of user names,  "/file/name" or "type:table" patterns, sepa-
#   rated by commas and/or whitespace.  The list is matched left to right,  and
#   the search stops on the first match.  A "/file/name" pattern is replaced by
#   its contents;  a "type:table" lookup table is matched when a name matches a
#   lookup key (the lookup result is ignored).
masquerade_exceptions = root, mailer-daemon, postmaster


# VIRTUAL DOMAIN
# -----------------------------------------------------------------------------
# virtual_alias_domains (default: $virtual_alias_maps)
#   Postfix is  final destination  for the specified list  of virtual alias do-
#   mains, that is, domains for which all addresses are aliased to addresses in
#   other local or remote domains. The SMTP server validates recipient address-
#   es with "$virtual_alias_maps" and rejects non-existent recipients. See also
#   the virtual alias domain class in the ADDRESS_CLASS_README file.
#
#   The default value is $virtual_alias_maps  so that you can keep all informa-
#   tion about  virtual alias domains in one place.  If you have many users, it
#   is better to separate information that changes more frequently (virtual ad-
#   dress -----> local or remote address mapping) from information that changes
#   less frequently (the list of virtual domain names).
#
#   See also the VIRTUAL_README and ADDRESS_CLASS_README documents  for further
#   information.
virtual_alias_domains = hash:/etc/postfix/virthosts

# virtual_alias_maps (default: $virtual_maps)
#   Optional lookup tables  that alias specific e-mail addresses  or domains to
#   other local or remote address.  The table format and lookups are documented
#   in virtual(5).  For an overview  of Postfix  address  manipulations see the
#   ADDRESS_REWRITING_README document. This feature is available in Postfix 2.0
#   and later. The default value is backwards compatible with Postfix 1.1.
virtual_alias_maps = hash:/etc/postfix/virtusers

# virtual_mailbox_domains (default: $virtual_mailbox_maps)
#   Postfix is final destination for the specified list of domains; mail is de-
#   livered via the $virtual_transport mail delivery transport. By default this
#   is the Postfix virtual(8) delivery agent. The SMTP server validates recipi-
#   ent addresses with  $virtual_mailbox_maps and rejects mail for non-existent
#   recipients. 
#
#   See also the virtual mailbox domain class in the ADDRESS_CLASS_README file.
#   This parameter expects  the same syntax  as the mydestination configuration
#   parameter.
virtual_mailbox_domains = hash:/etc/postfix/vmailhosts

# virtual_mailbox_maps (default: empty)
#   Optional lookup tables  with all valid addresses  in the domains that match
#   "$virtual_mailbox_domains".  In a lookup table, specify a left-hand side of
#   "@domain.tld" to match any user in the specified domain  that does not have
#   a specific "user@domain.tld" entry.  The remainder of this text is specific
#   to the virtual(8) delivery agent.  It does not apply when mail is delivered
#   with a different mail delivery program.
#
#   The virtual(8) delivery agent uses  this table to look up the per-recipient
#   mailbox or  maildir pathname.  If the lookup result ends  in a slash ("/"),
#   "maildir-style" delivery is carried out,  otherwise the path  is assumed to
#   specify a "UNIX-style" mailbox file. Note that $virtual_mailbox_base is un-
#   conditionally prepended to this path.  When a recipient address  has an op-
#   tional address extension (neko+nyaaaan@domain.tld), the virtual(8) delivery
#   agent looks up the full address first,  and when the lookup fails, it looks
#   up the unextended address (neko@domain.tld).
#
#   Note 1: for security reasons, the virtual(8) delivery agent disallows regu-
#           lar expression substitution of $1 etc. in regular expression lookup
#           tables, because that would open a security hole.
#
#   Note 2: for security reasons, the virtual(8) delivery agent will silently
#           ignore requests to use the proxymap(8) server. Instead it will open
#           the table directly. Before Postfix version 2.2, the virtual(8) de-
#           livery agent will terminate with a fatal error.
virtual_mailbox_maps = hash:/etc/postfix/vmailboxes

# virtual_uid_maps (default: empty)
#   Lookup tables  with the per-recipient user ID  that the virtual(8) delivery
#   agent uses while writing to the recipient's mailbox. This parameter is spe-
#   cific to the virtual(8) delivery agent.  It does not apply when mail is de-
#   livered with a different mail delivery program.
#
#   In a lookup table,  specify a left-hand side of "@domain.tld"  to match any
#   user in the specified domain that doesn't have a specific "user@domain.tld"
#   entry.
#
#   Note 1: for security reasons, the virtual(8) delivery agent disallows regu-
#           lar expression substitution of $1 etc. in regular expression lookup
#           tables, because that would open a security hole.
#
#   Note 2: for security reasons, the virtual(8) delivery agent will silently
#           ignore requests to use the proxymap(8) server. Instead it will open
#           the table directly. Before Postfix version 2.2, the virtual(8) de-
#           livery agent will terminate with a fatal error.
virtual_uid_maps =

# virtual_gid_maps (default: empty)
#   Lookup tables with the per-recipient group ID for virtual(8) mailbox deliv-
#   ery.  This parameter is specific to the virtual(8) delivery agent.  It does
#   not apply when mail is delivered with a different mail delivery program.
#
#   Note 1: for security reasons, the virtual(8) delivery agent disallows regu-
#           lar expression substitution of $1 etc. in regular expression lookup
#           tables, because that would open a security hole.
#
#   Note 2: for security reasons, the virtual(8) delivery agent will silently
#           ignore requests to use the proxymap(8) server. Instead it will open
#           the table directly. Before Postfix version 2.2, the virtual(8) de-
#           livery agent will terminate with a fatal error.
virtual_gid_maps =

# virtual_mailbox_base (default: empty)
#   A prefix path  that the virtual(8) delivery agent  prepends to all pathname
#   results from $virtual_mailbox_maps table lookups.  This is a safety measure
#   to ensure  that an out of control map does not litter  the file system with
#   mailboxes.  While "virtual_mailbox_base" could be set to "/",  this setting
#   isn't recommended.
#
#   This parameter is specific to the virtual(8) delivery agent. It doesn't ap-
#   ply when mail is delivered with a different mail delivery program.
virtual_mailbox_base =


# ADDRESS EXTENSIONS (e.g., user+foo)
# -----------------------------------------------------------------------------
# recipient_delimiter (default: empty)
#   The "recipient_delimiter"  configuration parameter specifies  the separator
#   between user names and address extensions (neko+nyaaan).  See relocated(5),
#   canonical(5), local(8) and virtual(5)  for the effects this has on aliases,
#   canonical, virtual,  relocated and ".forward" file lookups.  Basically, the
#   software tries user+foo and .forward+foo before trying user and .forward.
recipient_delimiter = +

# swap_bangpath (default: yes)
#   Enable the rewriting of "neko!nyaaan" into "neko@nyaaan". This is necessary
#   if your machine is connected to UUCP networks. It is enabled by default.
#
#   Note: with Postfix version 2.2, message header address rewriting happens
#         only when one of the following conditions is true:
#
#     - The message is received with the Postfix sendmail(1) command,
#     - The message is received from a network client that matches
#       $local_header_rewrite_clients,
#     - The message is received from the network, and the
#       remote_header_rewrite_domain parameter specifies a non-empty value.
#
#   To get the behavior before Postfix version 2.2, specify
#   "local_header_rewrite_clients = static:all".
swap_bangpath = no


# DELIVERY TO MAILBOX
# -----------------------------------------------------------------------------
# home_mailbox (default: empty)
#   The "home_mailbox"  configuration parameter specifies the optional pathname
#   of a mailbox file relative to a user's home directory.  The default mailbox
#   file is "/var/spool/mail/user" or "/var/mail/user".  Specify "Maildir/" for
#   qmail-style delivery (the "/" is required).
#
#home_mailbox = Mailbox
home_mailbox = Maildir/

# mail_spool_directory (default: see "postconf -d" output)
#   The mail_spool_directory parameter specifies the directory where UNIX-style
#   mailboxes are kept. The default setting depends on the system type.
#
#mail_spool_directory = /var/spool/mail

# mailbox_command (default: empty)
#   The "mailbox_command" parameter specifies  the optional external command to
#   use instead of mailbox delivery.  The command is run  as the recipient with
#   proper HOME, SHELL and LOGNAME environment settings.
#   Exception: delivery for root is done as $default_user.
#
#   Other environment variables of interest:
#     - USER (recipient username)
#     - EXTENSION (address extension)
#     - DOMAIN (domain part of address)
#     - LOCAL (the address localpart)
#
#   Unlike other Postfix configuration parameters, the "mailbox_command" param-
#   eter is not subjected to $parameter substitutions.  This is to make it eas-
#   ier to specify shell syntax (see example below).
#
#   Avoid shell meta characters  because they will force Postfix  to run an ex-
#   pensive shell process. Procmail alone is expensive enough.
#
#   IF YOU USE THIS TO DELIVER MAIL SYSTEM-WIDE,  YOU MUST SET UP AN ALIAS THAT
#   FORWARDS MAIL FOR ROOT TO A REAL USER.
#
#mailbox_command = /some/where/procmail
#mailbox_command = /some/where/procmail -a "$EXTENSION"

# mailbox_transport (default: empty)
#   The mailbox_transport specifies the optional transport  in master.cf to use
#   after processing aliases and .forward files.  This parameter has precedence
#   over the mailbox_command, fallback_transport and luser_relay parameters.
#
#   Specify a string of the form transport:nexthop, where transport is the name
#   of a mail delivery transport defined in master.cf. The :nexthop part is op-
#   tional. For more details see the sample transport configuration file.
#
#   NOTE: if you use this feature for accounts not in the UNIX password file,
#         then you must update the "local_recipient_maps" setting in the
#         main.cf file, otherwise the SMTP server will reject mail for non-UNIX
#         accounts with "User unknown in local recipient table".
#
#   Cyrus IMAP over LMTP. Specify
#     ``lmtpunix cmd="lmtpd" listen="/var/imap/socket/lmtp" prefork=0''
#   in cyrus.conf.
#mailbox_transport = lmtp:unix:/var/lib/imap/socket/lmtp

#   If using the cyrus-imapd IMAP  server deliver local mail to the IMAP server
#   using LMTP (Local Mail Transport Protocol), this is prefered over the older
#   cyrus deliver program by setting the mailbox_transport as below:
#
#mailbox_transport = lmtp:unix:/var/lib/imap/socket/lmtp

#   The efficiency of LMTP delivery for "cyrus-imapd" can be enhanced via these
#   settings.
#
#local_destination_recipient_limit = 300
#local_destination_concurrency_limit = 5
#
#   Of course you should adjust these settings  as appropriate for the capacity
#   of the hardware you are using.  The recipient limit  setting can be used to
#   take advantage of  the single instance message store capability of "Cyrus".
#   The concurrency limit  can be used to  control  how many  simultaneous LMTP
#   sessions will be permitted to the Cyrus message store. 
#
#   Cyrus IMAP via command line.  Uncomment the  "cyrus...pipe"  and subsequent
#   line in master.cf.
#mailbox_transport = cyrus

# fallback_transport (default: empty)
#   The fallback_transport specifies the optional transport in master.cf to use
#   for recipients that are not found in the UNIX passwd database.  This param-
#   eter has precedence over the luser_relay parameter.
#
#   Specify a string  of the form "transport:nexthop",  where transport  is the
#   name of a mail delivery transport defined in master.cf. The ":nexthop" part
#   is optional. For more details see the sample transport configuration file.
#
#   NOTE: if you use this feature for accounts not in the UNIX password file,
#         then you must update the "local_recipient_maps" setting in the
#         main.cf file, otherwise the SMTP server will reject mail for non-UNIX
#         accounts with "User unknown in local recipient table".
#
#fallback_transport = lmtp:unix:/var/lib/imap/socket/lmtp
#fallback_transport =

# luser_relay (default: empty)
#   The luser_relay parameter specifies an optional destination address for un-
#   known recipients.
#
#   By default, mail for "unknown@$mydestination", "unknown@[$inet_interfaces]"
#   or "unknown@[$proxy_interfaces]" is returned as undeliverable.
#
#   The following expansions are done on luser_relay:
#     - $user (recipient username)
#     - $shell (recipient shell)
#     - $home (recipient home directory)
#     - $recipient (full recipient address)
#     - $extension (recipient address extension)
#     - $domain (recipient domain)
#     - $local (entire recipient localpart)
#     - $recipient_delimiter
#
#   Specify "${name?value}" or "${name:value}" to expand value  only when $name
#   does (does not) exist. "luser_relay" works only for the default Postfix lo-
#   cal delivery agent.
#
#   NOTE: if you use this feature for accounts not in the UNIX password file,
#         then you must update the "local_recipient_maps" setting in the
#         main.cf file, otherwise the SMTP server will reject mail for non-UNIX
#         accounts with "User unknown in local recipient table".
#
#luser_relay = $user@other.host
#luser_relay = $local@other.host
#luser_relay = admin+$local


# DELIVERY TO COMMANDS, FILES
# -----------------------------------------------------------------------------
# allow_mail_to_commands (default: alias, forward)
#   Restrict local(8) email delivery  to external commands.
#   The default is to disallow delivery to "|command" in ":include:" files (see
#   aliases(5) for the text that defines this terminology).
#
#   Specify zero or more of: alias,  forward or include, in order to allow com-
#   mands in aliases(5), .forward files or in :include: files, respectively.
allow_mail_to_commands = alias, forward

# command_time_limit (default: 1000s)
#   Time limit  for delivery  to external commands.  This limit is  used by the
#   local(8) delivery agent,  and is the default time limit for delivery by the
#   pipe(8) delivery agent.
#
#   Note: if you set this time limit to a large value you must update the
#         global "ipc_timeout" parameter as well.
command_time_limit = 1000s

# local_command_shell (default: empty)
#   Optional shell program for local(8) delivery to non-Postfix command. By de-
#   fault, "non-Postfix" commands are executed directly;  commands are given to
#   given to the default shell (typically /bin/sh) only when they contain shell
#   meta characters or shell built-in commands.
#
#   "sendmail's restricted shell" (smrsh) is what most people will use in order
#   to restrict what programs can be run from e.g. ".forward" files ("smrsh" is
#   part of the Sendmail distribution).
#
#   Note: when a shell program is specified, it is invoked even when the
#         command contains no shell built-in commands or meta characters.
#
#local_command_shell = /var/adm/smrsh

# allow_mail_to_files (default: alias, forward)
#   Restrict local(8) mail delivery to external files. The default is to disal-
#   low "/file/name"  destinations in ":include:" files (see aliases(5) for the
#   text that defines this terminology).
allow_mail_to_files = alias, forward


# SHOW SOFTWARE VERSION OR NOT
# -----------------------------------------------------------------------------
# mail_name (default: Postfix)
#   The mail system name that is displayed in "Received:" headers,  in the SMTP
#   greeting banner, and in bounced mail.
mail_name = Postfix

# smtpd_banner (default: $myhostname ESMTP $mail_name)
#   The "smtpd_banner" parameter specifies  the text that  follows the 220 code
#   in the SMTP server's greeting banner. Some people like to see the mail ver-
#   sion advertised. By default, Postfix shows no version.
#
#   You MUST specify "$myhostname" parameter  at the start of the text. That is
#   an RFC requirement. Postfix itself does not care.
smtpd_banner = $myhostname ESMTP MAIL SYSTEM

# postscreen_greet_banner (default: $smtpd_banner)
#   The text in the optional "220-text ... " server response that postscreen(8)
#   sends ahead of the real Postfix SMTP server's "220 text..." response, in an
#   attempt to confuse bad SMTP clients  so that  they speak before  their turn
#   (pre-greet).  Specify an empty value to disable  this feature. This feature
#   is available in Postfix 2.8.
postscreen_greet_banner = $smtpd_banner


# LOGGING
# -----------------------------------------------------------------------------
# syslog_facility (default: mail)
#   The syslog facility  of Postfix logging.  Specify a facility  as defined in
#   syslog.conf(5). The default facility is "mail".
#
#   Warning: a non-default syslog_facility setting takes effect only after a
#            Postfix process has completed initialization. Errors during proc-
#            ess initialization will be logged with the default facility. Ex-
#            amples are errors while parsing the command line arguments, and
#            errors while accessing the Postfix main.cf configuration file.
syslog_facility = mail

# syslog_name (default: see "postconf -d" output)
#   A prefix that is prepended to the process name in syslog records,  so that,
#   for example, "smtpd" becomes "prefix/smtpd".
#
#   Warning: a non-default syslog_name setting takes effect only after a
#            Postfix process has completed initialization. Errors during proc-
#            ess initialization will be logged with the default name. Examples
#            are errors while parsing the command line arguments, and errors
#            while accessing the Postfix main.cf configuration file.
#syslog_name = ${multi_instance_name:postfix}${multi_instance_name?$multi_instance_name}

# smtp_tls_loglevel (default: 0)
#   Enable additional Postfix SMTP client logging of TLS activity. Each logging
#   level also includes the information  that is logged at a lower logging lev-
#   el.
#     - 0: Disable logging of TLS activity.
#     - 1: Log only a summary message on TLS handshake completion - no logging
#          of remote SMTP server certificate trust-chain verification errors if
#          server certificate verification is not required. With Postfix 2.8
#          and earlier, log the summary message and unconditionally log
#          trust-chain verification errors.
#     - 2: Also log levels during TLS negotiation.
#     - 3: Also log hexadecimal and ASCII dump of TLS negotiation process.
#     - 4: Also log hexadecimal and ASCII dump of complete transmission after
#          STARTTLS.
#
#   DO NOT USE "smtp_tls_loglevel = 2" OR HIGHER EXCEPT IN CASE OF PROBLEMS.
#   Use of loglevel 4 is strongly discouraged. This feature is available in
#   Postfix 2.2 and later.
smtp_tls_loglevel = 1

# smtpd_tls_loglevel (default: 0)
#   Enable additional Postfix SMTP server logging of TLS activity. Each logging
#   level also includes the information  that is logged at a lower logging lev-
#   el.
#     - 0: Disable logging of TLS activity.
#     - 1: Log only a summary message on TLS handshake completion - no logging
#          of remote SMTP server certificate trust-chain verification errors if
#          server certificate verification is not required. With Postfix 2.8
#          and earlier, log the summary message and unconditionally log
#          trust-chain verification errors.
#     - 2: Also log levels during TLS negotiation.
#     - 3: Also log hexadecimal and ASCII dump of TLS negotiation process.
#     - 4: Also log hexadecimal and ASCII dump of complete transmission after
#          STARTTLS.
#
#   DO NOT USE "smtpd_tls_loglevel = 2" OR HIGHER EXCEPT IN CASE OF PROBLEMS.
#   Use of loglevel 4 is strongly discouraged. This feature is available in
#   Postfix 2.2 and later.
smtpd_tls_loglevel = 1


# QUEUE AND PROCESS OWNERSHIP
# -----------------------------------------------------------------------------
# mail_owner (default: postfix)
#   The "mail_owner" parameter specifies  the owner of the Postfix queue and of
#   most Postfix daemon processes. Specify the name of a user account THAT DOES
#   NOT SHARE ITS USER OR GROUP ID  WITH OTHER ACCOUNTS AND  THAT OWNS NO OTHER
#   FILES OR PROCESSES ON THE SYSTEM.
#   IN PARTICULAR, DON'T SPECIFY nobody OR daemon. PLEASE USE A DEDICATED USER.
mail_owner = postfix

# default_privs (default: nobody)
#   The "default_privs"  parameter specifies the default rights used by the lo-
#   cal delivery agent  for delivery to external file or command.  These rights
#   are used in the absence of a recipient user context.
#   DO NOT SPECIFY A PRIVILEGED USER OR THE POSTFIX OWNER.
default_privs = nobody

# authorized_flush_users (default: static:anyone)
#   List of users who are authorized to flush the queue.  By default, all users
#   are allowed to  flush the queue.  Access is always granted  if the invoking
#   user is the super-user or the $mail_owner user.  Otherwise, the real UID of
#   the process is looked up in the system password file, and access is granted
#   only if the corresponding  login name is  on the access list.  The username
#   "unknown" is used for processes whose real UID is not found in the password
#   file.
authorized_flush_users = static:anyone

# authorized_mailq_users (default: static:anyone)
#   List of users  who are authorized to view the queue.  By default, all users
#   are allowed to view the queue. Access is always granted if the invoking us-
#   er is the super-user or the "$mail_owner" user. Otherwise,  the real UID of
#   the process is looked up in the system password file, and access is granted
#   only if  the corresponding login name  is on the access list.  The username
#   "unknown" is used for processes whose real UID is not found in the password
#   file.
authorized_mailq_users = static:anyone

# authorized_submit_users (default: static:anyone)
#   List of users  who are authorized to submit  mail with the sendmail(1) com-
#   mand (and with the privileged postdrop(1) helper command).  By default, all
#   users are allowed to submit mail. Otherwise, the real UID of the process is
#   looked up  in the system password file,  and access is granted  only if the
#   corresponding login name  is on the access list.  The username "unknown" is
#   used for processes whose real UID is not found in the password file. To de-
#   ny mail submission access to all users specify an empty list.
authorized_submit_users = static:anyone


# LOCAL PATHNAME INFORMATION
# -----------------------------------------------------------------------------
# queue_directory (default: see "postconf -d" output)
#   The "queue_directory"  specifies the location of the Postfix queue. This is
#   also the root directory of Postfix daemons that run chrooted. See the files
#   in examples/chroot-setup for setting up Postfix chroot environments on dif-
#   ferent UNIX systems.
queue_directory = /var/spool/postfix

# command_directory (default: see "postconf -d" output)
#   The "command_directory" parameter specifies the location of all "post*****"
#   commands.
command_directory = /usr/sbin

# daemon_directory (default: see "postconf -d" output)
#   The daemon_directory parameter specifies the location of all Postfix daemon
#   programs (i.e.  programs listed in the master.cf file). This directory must
#   be owned by root.
daemon_directory = /usr/libexec/postfix

# data_directory (default: see "postconf -d" output)
#   The "data_directory" parameter specifies  the location of  Postfix-writable
#   data files (caches, random numbers).  This directory  must be  owned by the
#   mail_owner account (see below).
data_directory = /var/lib/postfix

# alternate_config_directories (default: empty)
#   A list of "non-default" Postfix configuration directories that may be spec-
#   ified with "-c /path/to/config_directory"  on the command line (in the case
#   of sendmail(1), with the "-C" option), or via the "MAIL_CONFIG" environment
#   parameter. This list must be specified in the default Postfix main.cf file,
#   and  will be used by "set-gid"  Postfix commands  such as  postqueue(1) and
#   postdrop(1). Specify absolute pathnames, separated by comma or space.
#
#   Note: $name expansion is not supported.
alternate_config_directories =

# tls_random_source (default: see "postconf -d" output)
#   The external entropy source for the in-memory tlsmgr(8) PRNG: Pseudo Random
#   Number Generator pool.  Be sure to specify  a non-blocking source.  If this
#   source is not  a regular file,  the entropy source type  must be prepended:
#   egd:/path/to/egd_socket for a source  with EGD compatible socket interface,
#   or dev:/path/to/device for a device file.
#
#   Note: on OpenBSD systems specify /dev/arandom when /dev/urandom gives time-
#         out errors.
#
#   This feature is available in Postfix 2.2 and later.
#tls_random_source = dev:/dev/urandom
#

# DEBUGGING CONTROL
# -----------------------------------------------------------------------------
# debug_peer_level (default: 2)
#   The "debug_peer_level" parameter specifies the increment in verbose logging
#   level when an SMTP client or server host name  or address matches a pattern
#   in the debug_peer_list parameter.
debug_peer_level = 2

# debug_peer_list (default: empty)
#   The debug_peer_list parameter  specifies an optional list of domain or net-
#   work patterns, /file/name patterns or type:name tables. When an SMTP client
#   or server host name or address matches a pattern, increase the verbose log-
#   ging level by the amount specified in the debug_peer_level parameter.
#
#debug_peer_list = 127.0.0.1
#debug_peer_list = some.domain

# debugger_command (default: empty)
#   The debugger_command specifies the external command that is executed when a
#   Postfix daemon program is run with the -D option. 
#
#   Use "command ....... & sleep 5"  so that the debugger can attach before the
#   process marches on.  If you use an X-based debugger, be sure to set up your
#   XAUTHORITY environment variable before starting Postfix.
debugger_command =
    PATH=/bin:/usr/bin:/usr/local/bin:/usr/X11R6/bin
    ddd $daemon_directory/$process_name $process_id & sleep 5

#   If you can't use X Window, use this to capture the call stack when a daemon
#   crashes.  The result is  in a file  in the configuration directory,  and is
#   named after the process name and the process ID.
#
#     debugger_command =
#       PATH=/bin:/usr/bin:/usr/local/bin; export PATH; (echo cont;
#       echo where) | gdb $daemon_directory/$process_name $process_id 2>&1
#       > $config_directory/$process_name.$process_id.log & sleep 5
#
#   Another possibility is to run "gdb" under a detached screen session. To at-
#   tach to the screen sesssion,  su root and run "screen -r <id_string>" where
#   <id_string> uniquely matches one of the detached sessions
#   (from "screen -list").
#
#     debugger_command =
#       PATH=/bin:/usr/bin:/sbin:/usr/sbin; export PATH; screen
#       -dmS $process_name gdb $daemon_directory/$process_name
#       $process_id & sleep 1


# INSTALL-TIME CONFIGURATION INFORMATION
# -----------------------------------------------------------------------------
# sendmail_path (default: see "postconf -d" output)
#   sendmail_path:  The full pathname of  the Postfix sendmail command. This is
#   the Sendmail-compatible mail posting interface.
sendmail_path = /usr/sbin/sendmail.postfix

# newaliases_path (default: see "postconf -d" output)
#   newaliases_path:  The full pathname of the Postfix newaliases command. This
#   is the Sendmail-compatible command to build alias databases.
newaliases_path = /usr/bin/newaliases.postfix

# mailq_path (default: see "postconf -d" output)
#   mailq_path:  The full pathname of  the Postfix "mailq" command. This is the
#   Sendmail-compatible mail queue listing command.
mailq_path = /usr/bin/mailq.postfix

# setgid_group (default: postdrop)
#   setgid_group:  The group for mail submission and queue management commands.
#   This must be a group name with a numerical group ID that is not shared with
#   other accounts, not even with the Postfix account.
setgid_group = postdrop

# html_directory (default: see "postconf -d" output)
#   html_directory: The location of the Postfix HTML documentation.
html_directory = no

# manpage_directory (default: see "postconf -d" output)
#   manpage_directory: The location of the Postfix on-line manual pages.
manpage_directory = /usr/share/man

# readme_directory (default: see "postconf -d" output)
#   readme_directory: The location of the Postfix README files.
readme_directory = /usr/share/doc/postfix-2.10.1/README_FILES

